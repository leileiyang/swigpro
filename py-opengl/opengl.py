# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.0
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_opengl')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_opengl')
    _opengl = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_opengl', [dirname(__file__)])
        except ImportError:
            import _opengl
            return _opengl
        try:
            _mod = imp.load_module('_opengl', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _opengl = swig_import_helper()
    del swig_import_helper
else:
    import _opengl
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

GL_VERSION_1_1 = _opengl.GL_VERSION_1_1
GL_VERSION_1_2 = _opengl.GL_VERSION_1_2
GL_VERSION_1_3 = _opengl.GL_VERSION_1_3
GL_ARB_imaging = _opengl.GL_ARB_imaging
GL_FALSE = _opengl.GL_FALSE
GL_TRUE = _opengl.GL_TRUE
GL_BYTE = _opengl.GL_BYTE
GL_UNSIGNED_BYTE = _opengl.GL_UNSIGNED_BYTE
GL_SHORT = _opengl.GL_SHORT
GL_UNSIGNED_SHORT = _opengl.GL_UNSIGNED_SHORT
GL_INT = _opengl.GL_INT
GL_UNSIGNED_INT = _opengl.GL_UNSIGNED_INT
GL_FLOAT = _opengl.GL_FLOAT
GL_2_BYTES = _opengl.GL_2_BYTES
GL_3_BYTES = _opengl.GL_3_BYTES
GL_4_BYTES = _opengl.GL_4_BYTES
GL_DOUBLE = _opengl.GL_DOUBLE
GL_POINTS = _opengl.GL_POINTS
GL_LINES = _opengl.GL_LINES
GL_LINE_LOOP = _opengl.GL_LINE_LOOP
GL_LINE_STRIP = _opengl.GL_LINE_STRIP
GL_TRIANGLES = _opengl.GL_TRIANGLES
GL_TRIANGLE_STRIP = _opengl.GL_TRIANGLE_STRIP
GL_TRIANGLE_FAN = _opengl.GL_TRIANGLE_FAN
GL_QUADS = _opengl.GL_QUADS
GL_QUAD_STRIP = _opengl.GL_QUAD_STRIP
GL_POLYGON = _opengl.GL_POLYGON
GL_VERTEX_ARRAY = _opengl.GL_VERTEX_ARRAY
GL_NORMAL_ARRAY = _opengl.GL_NORMAL_ARRAY
GL_COLOR_ARRAY = _opengl.GL_COLOR_ARRAY
GL_INDEX_ARRAY = _opengl.GL_INDEX_ARRAY
GL_TEXTURE_COORD_ARRAY = _opengl.GL_TEXTURE_COORD_ARRAY
GL_EDGE_FLAG_ARRAY = _opengl.GL_EDGE_FLAG_ARRAY
GL_VERTEX_ARRAY_SIZE = _opengl.GL_VERTEX_ARRAY_SIZE
GL_VERTEX_ARRAY_TYPE = _opengl.GL_VERTEX_ARRAY_TYPE
GL_VERTEX_ARRAY_STRIDE = _opengl.GL_VERTEX_ARRAY_STRIDE
GL_NORMAL_ARRAY_TYPE = _opengl.GL_NORMAL_ARRAY_TYPE
GL_NORMAL_ARRAY_STRIDE = _opengl.GL_NORMAL_ARRAY_STRIDE
GL_COLOR_ARRAY_SIZE = _opengl.GL_COLOR_ARRAY_SIZE
GL_COLOR_ARRAY_TYPE = _opengl.GL_COLOR_ARRAY_TYPE
GL_COLOR_ARRAY_STRIDE = _opengl.GL_COLOR_ARRAY_STRIDE
GL_INDEX_ARRAY_TYPE = _opengl.GL_INDEX_ARRAY_TYPE
GL_INDEX_ARRAY_STRIDE = _opengl.GL_INDEX_ARRAY_STRIDE
GL_TEXTURE_COORD_ARRAY_SIZE = _opengl.GL_TEXTURE_COORD_ARRAY_SIZE
GL_TEXTURE_COORD_ARRAY_TYPE = _opengl.GL_TEXTURE_COORD_ARRAY_TYPE
GL_TEXTURE_COORD_ARRAY_STRIDE = _opengl.GL_TEXTURE_COORD_ARRAY_STRIDE
GL_EDGE_FLAG_ARRAY_STRIDE = _opengl.GL_EDGE_FLAG_ARRAY_STRIDE
GL_VERTEX_ARRAY_POINTER = _opengl.GL_VERTEX_ARRAY_POINTER
GL_NORMAL_ARRAY_POINTER = _opengl.GL_NORMAL_ARRAY_POINTER
GL_COLOR_ARRAY_POINTER = _opengl.GL_COLOR_ARRAY_POINTER
GL_INDEX_ARRAY_POINTER = _opengl.GL_INDEX_ARRAY_POINTER
GL_TEXTURE_COORD_ARRAY_POINTER = _opengl.GL_TEXTURE_COORD_ARRAY_POINTER
GL_EDGE_FLAG_ARRAY_POINTER = _opengl.GL_EDGE_FLAG_ARRAY_POINTER
GL_V2F = _opengl.GL_V2F
GL_V3F = _opengl.GL_V3F
GL_C4UB_V2F = _opengl.GL_C4UB_V2F
GL_C4UB_V3F = _opengl.GL_C4UB_V3F
GL_C3F_V3F = _opengl.GL_C3F_V3F
GL_N3F_V3F = _opengl.GL_N3F_V3F
GL_C4F_N3F_V3F = _opengl.GL_C4F_N3F_V3F
GL_T2F_V3F = _opengl.GL_T2F_V3F
GL_T4F_V4F = _opengl.GL_T4F_V4F
GL_T2F_C4UB_V3F = _opengl.GL_T2F_C4UB_V3F
GL_T2F_C3F_V3F = _opengl.GL_T2F_C3F_V3F
GL_T2F_N3F_V3F = _opengl.GL_T2F_N3F_V3F
GL_T2F_C4F_N3F_V3F = _opengl.GL_T2F_C4F_N3F_V3F
GL_T4F_C4F_N3F_V4F = _opengl.GL_T4F_C4F_N3F_V4F
GL_MATRIX_MODE = _opengl.GL_MATRIX_MODE
GL_MODELVIEW = _opengl.GL_MODELVIEW
GL_PROJECTION = _opengl.GL_PROJECTION
GL_TEXTURE = _opengl.GL_TEXTURE
GL_POINT_SMOOTH = _opengl.GL_POINT_SMOOTH
GL_POINT_SIZE = _opengl.GL_POINT_SIZE
GL_POINT_SIZE_GRANULARITY = _opengl.GL_POINT_SIZE_GRANULARITY
GL_POINT_SIZE_RANGE = _opengl.GL_POINT_SIZE_RANGE
GL_LINE_SMOOTH = _opengl.GL_LINE_SMOOTH
GL_LINE_STIPPLE = _opengl.GL_LINE_STIPPLE
GL_LINE_STIPPLE_PATTERN = _opengl.GL_LINE_STIPPLE_PATTERN
GL_LINE_STIPPLE_REPEAT = _opengl.GL_LINE_STIPPLE_REPEAT
GL_LINE_WIDTH = _opengl.GL_LINE_WIDTH
GL_LINE_WIDTH_GRANULARITY = _opengl.GL_LINE_WIDTH_GRANULARITY
GL_LINE_WIDTH_RANGE = _opengl.GL_LINE_WIDTH_RANGE
GL_POINT = _opengl.GL_POINT
GL_LINE = _opengl.GL_LINE
GL_FILL = _opengl.GL_FILL
GL_CW = _opengl.GL_CW
GL_CCW = _opengl.GL_CCW
GL_FRONT = _opengl.GL_FRONT
GL_BACK = _opengl.GL_BACK
GL_POLYGON_MODE = _opengl.GL_POLYGON_MODE
GL_POLYGON_SMOOTH = _opengl.GL_POLYGON_SMOOTH
GL_POLYGON_STIPPLE = _opengl.GL_POLYGON_STIPPLE
GL_EDGE_FLAG = _opengl.GL_EDGE_FLAG
GL_CULL_FACE = _opengl.GL_CULL_FACE
GL_CULL_FACE_MODE = _opengl.GL_CULL_FACE_MODE
GL_FRONT_FACE = _opengl.GL_FRONT_FACE
GL_POLYGON_OFFSET_FACTOR = _opengl.GL_POLYGON_OFFSET_FACTOR
GL_POLYGON_OFFSET_UNITS = _opengl.GL_POLYGON_OFFSET_UNITS
GL_POLYGON_OFFSET_POINT = _opengl.GL_POLYGON_OFFSET_POINT
GL_POLYGON_OFFSET_LINE = _opengl.GL_POLYGON_OFFSET_LINE
GL_POLYGON_OFFSET_FILL = _opengl.GL_POLYGON_OFFSET_FILL
GL_COMPILE = _opengl.GL_COMPILE
GL_COMPILE_AND_EXECUTE = _opengl.GL_COMPILE_AND_EXECUTE
GL_LIST_BASE = _opengl.GL_LIST_BASE
GL_LIST_INDEX = _opengl.GL_LIST_INDEX
GL_LIST_MODE = _opengl.GL_LIST_MODE
GL_NEVER = _opengl.GL_NEVER
GL_LESS = _opengl.GL_LESS
GL_EQUAL = _opengl.GL_EQUAL
GL_LEQUAL = _opengl.GL_LEQUAL
GL_GREATER = _opengl.GL_GREATER
GL_NOTEQUAL = _opengl.GL_NOTEQUAL
GL_GEQUAL = _opengl.GL_GEQUAL
GL_ALWAYS = _opengl.GL_ALWAYS
GL_DEPTH_TEST = _opengl.GL_DEPTH_TEST
GL_DEPTH_BITS = _opengl.GL_DEPTH_BITS
GL_DEPTH_CLEAR_VALUE = _opengl.GL_DEPTH_CLEAR_VALUE
GL_DEPTH_FUNC = _opengl.GL_DEPTH_FUNC
GL_DEPTH_RANGE = _opengl.GL_DEPTH_RANGE
GL_DEPTH_WRITEMASK = _opengl.GL_DEPTH_WRITEMASK
GL_DEPTH_COMPONENT = _opengl.GL_DEPTH_COMPONENT
GL_LIGHTING = _opengl.GL_LIGHTING
GL_LIGHT0 = _opengl.GL_LIGHT0
GL_LIGHT1 = _opengl.GL_LIGHT1
GL_LIGHT2 = _opengl.GL_LIGHT2
GL_LIGHT3 = _opengl.GL_LIGHT3
GL_LIGHT4 = _opengl.GL_LIGHT4
GL_LIGHT5 = _opengl.GL_LIGHT5
GL_LIGHT6 = _opengl.GL_LIGHT6
GL_LIGHT7 = _opengl.GL_LIGHT7
GL_SPOT_EXPONENT = _opengl.GL_SPOT_EXPONENT
GL_SPOT_CUTOFF = _opengl.GL_SPOT_CUTOFF
GL_CONSTANT_ATTENUATION = _opengl.GL_CONSTANT_ATTENUATION
GL_LINEAR_ATTENUATION = _opengl.GL_LINEAR_ATTENUATION
GL_QUADRATIC_ATTENUATION = _opengl.GL_QUADRATIC_ATTENUATION
GL_AMBIENT = _opengl.GL_AMBIENT
GL_DIFFUSE = _opengl.GL_DIFFUSE
GL_SPECULAR = _opengl.GL_SPECULAR
GL_SHININESS = _opengl.GL_SHININESS
GL_EMISSION = _opengl.GL_EMISSION
GL_POSITION = _opengl.GL_POSITION
GL_SPOT_DIRECTION = _opengl.GL_SPOT_DIRECTION
GL_AMBIENT_AND_DIFFUSE = _opengl.GL_AMBIENT_AND_DIFFUSE
GL_COLOR_INDEXES = _opengl.GL_COLOR_INDEXES
GL_LIGHT_MODEL_TWO_SIDE = _opengl.GL_LIGHT_MODEL_TWO_SIDE
GL_LIGHT_MODEL_LOCAL_VIEWER = _opengl.GL_LIGHT_MODEL_LOCAL_VIEWER
GL_LIGHT_MODEL_AMBIENT = _opengl.GL_LIGHT_MODEL_AMBIENT
GL_FRONT_AND_BACK = _opengl.GL_FRONT_AND_BACK
GL_SHADE_MODEL = _opengl.GL_SHADE_MODEL
GL_FLAT = _opengl.GL_FLAT
GL_SMOOTH = _opengl.GL_SMOOTH
GL_COLOR_MATERIAL = _opengl.GL_COLOR_MATERIAL
GL_COLOR_MATERIAL_FACE = _opengl.GL_COLOR_MATERIAL_FACE
GL_COLOR_MATERIAL_PARAMETER = _opengl.GL_COLOR_MATERIAL_PARAMETER
GL_NORMALIZE = _opengl.GL_NORMALIZE
GL_CLIP_PLANE0 = _opengl.GL_CLIP_PLANE0
GL_CLIP_PLANE1 = _opengl.GL_CLIP_PLANE1
GL_CLIP_PLANE2 = _opengl.GL_CLIP_PLANE2
GL_CLIP_PLANE3 = _opengl.GL_CLIP_PLANE3
GL_CLIP_PLANE4 = _opengl.GL_CLIP_PLANE4
GL_CLIP_PLANE5 = _opengl.GL_CLIP_PLANE5
GL_ACCUM_RED_BITS = _opengl.GL_ACCUM_RED_BITS
GL_ACCUM_GREEN_BITS = _opengl.GL_ACCUM_GREEN_BITS
GL_ACCUM_BLUE_BITS = _opengl.GL_ACCUM_BLUE_BITS
GL_ACCUM_ALPHA_BITS = _opengl.GL_ACCUM_ALPHA_BITS
GL_ACCUM_CLEAR_VALUE = _opengl.GL_ACCUM_CLEAR_VALUE
GL_ACCUM = _opengl.GL_ACCUM
GL_ADD = _opengl.GL_ADD
GL_LOAD = _opengl.GL_LOAD
GL_MULT = _opengl.GL_MULT
GL_RETURN = _opengl.GL_RETURN
GL_ALPHA_TEST = _opengl.GL_ALPHA_TEST
GL_ALPHA_TEST_REF = _opengl.GL_ALPHA_TEST_REF
GL_ALPHA_TEST_FUNC = _opengl.GL_ALPHA_TEST_FUNC
GL_BLEND = _opengl.GL_BLEND
GL_BLEND_SRC = _opengl.GL_BLEND_SRC
GL_BLEND_DST = _opengl.GL_BLEND_DST
GL_ZERO = _opengl.GL_ZERO
GL_ONE = _opengl.GL_ONE
GL_SRC_COLOR = _opengl.GL_SRC_COLOR
GL_ONE_MINUS_SRC_COLOR = _opengl.GL_ONE_MINUS_SRC_COLOR
GL_SRC_ALPHA = _opengl.GL_SRC_ALPHA
GL_ONE_MINUS_SRC_ALPHA = _opengl.GL_ONE_MINUS_SRC_ALPHA
GL_DST_ALPHA = _opengl.GL_DST_ALPHA
GL_ONE_MINUS_DST_ALPHA = _opengl.GL_ONE_MINUS_DST_ALPHA
GL_DST_COLOR = _opengl.GL_DST_COLOR
GL_ONE_MINUS_DST_COLOR = _opengl.GL_ONE_MINUS_DST_COLOR
GL_SRC_ALPHA_SATURATE = _opengl.GL_SRC_ALPHA_SATURATE
GL_FEEDBACK = _opengl.GL_FEEDBACK
GL_RENDER = _opengl.GL_RENDER
GL_SELECT = _opengl.GL_SELECT
GL_2D = _opengl.GL_2D
GL_3D = _opengl.GL_3D
GL_3D_COLOR = _opengl.GL_3D_COLOR
GL_3D_COLOR_TEXTURE = _opengl.GL_3D_COLOR_TEXTURE
GL_4D_COLOR_TEXTURE = _opengl.GL_4D_COLOR_TEXTURE
GL_POINT_TOKEN = _opengl.GL_POINT_TOKEN
GL_LINE_TOKEN = _opengl.GL_LINE_TOKEN
GL_LINE_RESET_TOKEN = _opengl.GL_LINE_RESET_TOKEN
GL_POLYGON_TOKEN = _opengl.GL_POLYGON_TOKEN
GL_BITMAP_TOKEN = _opengl.GL_BITMAP_TOKEN
GL_DRAW_PIXEL_TOKEN = _opengl.GL_DRAW_PIXEL_TOKEN
GL_COPY_PIXEL_TOKEN = _opengl.GL_COPY_PIXEL_TOKEN
GL_PASS_THROUGH_TOKEN = _opengl.GL_PASS_THROUGH_TOKEN
GL_FEEDBACK_BUFFER_POINTER = _opengl.GL_FEEDBACK_BUFFER_POINTER
GL_FEEDBACK_BUFFER_SIZE = _opengl.GL_FEEDBACK_BUFFER_SIZE
GL_FEEDBACK_BUFFER_TYPE = _opengl.GL_FEEDBACK_BUFFER_TYPE
GL_SELECTION_BUFFER_POINTER = _opengl.GL_SELECTION_BUFFER_POINTER
GL_SELECTION_BUFFER_SIZE = _opengl.GL_SELECTION_BUFFER_SIZE
GL_FOG = _opengl.GL_FOG
GL_FOG_MODE = _opengl.GL_FOG_MODE
GL_FOG_DENSITY = _opengl.GL_FOG_DENSITY
GL_FOG_COLOR = _opengl.GL_FOG_COLOR
GL_FOG_INDEX = _opengl.GL_FOG_INDEX
GL_FOG_START = _opengl.GL_FOG_START
GL_FOG_END = _opengl.GL_FOG_END
GL_LINEAR = _opengl.GL_LINEAR
GL_EXP = _opengl.GL_EXP
GL_EXP2 = _opengl.GL_EXP2
GL_LOGIC_OP = _opengl.GL_LOGIC_OP
GL_INDEX_LOGIC_OP = _opengl.GL_INDEX_LOGIC_OP
GL_COLOR_LOGIC_OP = _opengl.GL_COLOR_LOGIC_OP
GL_LOGIC_OP_MODE = _opengl.GL_LOGIC_OP_MODE
GL_CLEAR = _opengl.GL_CLEAR
GL_SET = _opengl.GL_SET
GL_COPY = _opengl.GL_COPY
GL_COPY_INVERTED = _opengl.GL_COPY_INVERTED
GL_NOOP = _opengl.GL_NOOP
GL_INVERT = _opengl.GL_INVERT
GL_AND = _opengl.GL_AND
GL_NAND = _opengl.GL_NAND
GL_OR = _opengl.GL_OR
GL_NOR = _opengl.GL_NOR
GL_XOR = _opengl.GL_XOR
GL_EQUIV = _opengl.GL_EQUIV
GL_AND_REVERSE = _opengl.GL_AND_REVERSE
GL_AND_INVERTED = _opengl.GL_AND_INVERTED
GL_OR_REVERSE = _opengl.GL_OR_REVERSE
GL_OR_INVERTED = _opengl.GL_OR_INVERTED
GL_STENCIL_BITS = _opengl.GL_STENCIL_BITS
GL_STENCIL_TEST = _opengl.GL_STENCIL_TEST
GL_STENCIL_CLEAR_VALUE = _opengl.GL_STENCIL_CLEAR_VALUE
GL_STENCIL_FUNC = _opengl.GL_STENCIL_FUNC
GL_STENCIL_VALUE_MASK = _opengl.GL_STENCIL_VALUE_MASK
GL_STENCIL_FAIL = _opengl.GL_STENCIL_FAIL
GL_STENCIL_PASS_DEPTH_FAIL = _opengl.GL_STENCIL_PASS_DEPTH_FAIL
GL_STENCIL_PASS_DEPTH_PASS = _opengl.GL_STENCIL_PASS_DEPTH_PASS
GL_STENCIL_REF = _opengl.GL_STENCIL_REF
GL_STENCIL_WRITEMASK = _opengl.GL_STENCIL_WRITEMASK
GL_STENCIL_INDEX = _opengl.GL_STENCIL_INDEX
GL_KEEP = _opengl.GL_KEEP
GL_REPLACE = _opengl.GL_REPLACE
GL_INCR = _opengl.GL_INCR
GL_DECR = _opengl.GL_DECR
GL_NONE = _opengl.GL_NONE
GL_LEFT = _opengl.GL_LEFT
GL_RIGHT = _opengl.GL_RIGHT
GL_FRONT_LEFT = _opengl.GL_FRONT_LEFT
GL_FRONT_RIGHT = _opengl.GL_FRONT_RIGHT
GL_BACK_LEFT = _opengl.GL_BACK_LEFT
GL_BACK_RIGHT = _opengl.GL_BACK_RIGHT
GL_AUX0 = _opengl.GL_AUX0
GL_AUX1 = _opengl.GL_AUX1
GL_AUX2 = _opengl.GL_AUX2
GL_AUX3 = _opengl.GL_AUX3
GL_COLOR_INDEX = _opengl.GL_COLOR_INDEX
GL_RED = _opengl.GL_RED
GL_GREEN = _opengl.GL_GREEN
GL_BLUE = _opengl.GL_BLUE
GL_ALPHA = _opengl.GL_ALPHA
GL_LUMINANCE = _opengl.GL_LUMINANCE
GL_LUMINANCE_ALPHA = _opengl.GL_LUMINANCE_ALPHA
GL_ALPHA_BITS = _opengl.GL_ALPHA_BITS
GL_RED_BITS = _opengl.GL_RED_BITS
GL_GREEN_BITS = _opengl.GL_GREEN_BITS
GL_BLUE_BITS = _opengl.GL_BLUE_BITS
GL_INDEX_BITS = _opengl.GL_INDEX_BITS
GL_SUBPIXEL_BITS = _opengl.GL_SUBPIXEL_BITS
GL_AUX_BUFFERS = _opengl.GL_AUX_BUFFERS
GL_READ_BUFFER = _opengl.GL_READ_BUFFER
GL_DRAW_BUFFER = _opengl.GL_DRAW_BUFFER
GL_DOUBLEBUFFER = _opengl.GL_DOUBLEBUFFER
GL_STEREO = _opengl.GL_STEREO
GL_BITMAP = _opengl.GL_BITMAP
GL_COLOR = _opengl.GL_COLOR
GL_DEPTH = _opengl.GL_DEPTH
GL_STENCIL = _opengl.GL_STENCIL
GL_DITHER = _opengl.GL_DITHER
GL_RGB = _opengl.GL_RGB
GL_RGBA = _opengl.GL_RGBA
GL_MAX_LIST_NESTING = _opengl.GL_MAX_LIST_NESTING
GL_MAX_EVAL_ORDER = _opengl.GL_MAX_EVAL_ORDER
GL_MAX_LIGHTS = _opengl.GL_MAX_LIGHTS
GL_MAX_CLIP_PLANES = _opengl.GL_MAX_CLIP_PLANES
GL_MAX_TEXTURE_SIZE = _opengl.GL_MAX_TEXTURE_SIZE
GL_MAX_PIXEL_MAP_TABLE = _opengl.GL_MAX_PIXEL_MAP_TABLE
GL_MAX_ATTRIB_STACK_DEPTH = _opengl.GL_MAX_ATTRIB_STACK_DEPTH
GL_MAX_MODELVIEW_STACK_DEPTH = _opengl.GL_MAX_MODELVIEW_STACK_DEPTH
GL_MAX_NAME_STACK_DEPTH = _opengl.GL_MAX_NAME_STACK_DEPTH
GL_MAX_PROJECTION_STACK_DEPTH = _opengl.GL_MAX_PROJECTION_STACK_DEPTH
GL_MAX_TEXTURE_STACK_DEPTH = _opengl.GL_MAX_TEXTURE_STACK_DEPTH
GL_MAX_VIEWPORT_DIMS = _opengl.GL_MAX_VIEWPORT_DIMS
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = _opengl.GL_MAX_CLIENT_ATTRIB_STACK_DEPTH
GL_ATTRIB_STACK_DEPTH = _opengl.GL_ATTRIB_STACK_DEPTH
GL_CLIENT_ATTRIB_STACK_DEPTH = _opengl.GL_CLIENT_ATTRIB_STACK_DEPTH
GL_COLOR_CLEAR_VALUE = _opengl.GL_COLOR_CLEAR_VALUE
GL_COLOR_WRITEMASK = _opengl.GL_COLOR_WRITEMASK
GL_CURRENT_INDEX = _opengl.GL_CURRENT_INDEX
GL_CURRENT_COLOR = _opengl.GL_CURRENT_COLOR
GL_CURRENT_NORMAL = _opengl.GL_CURRENT_NORMAL
GL_CURRENT_RASTER_COLOR = _opengl.GL_CURRENT_RASTER_COLOR
GL_CURRENT_RASTER_DISTANCE = _opengl.GL_CURRENT_RASTER_DISTANCE
GL_CURRENT_RASTER_INDEX = _opengl.GL_CURRENT_RASTER_INDEX
GL_CURRENT_RASTER_POSITION = _opengl.GL_CURRENT_RASTER_POSITION
GL_CURRENT_RASTER_TEXTURE_COORDS = _opengl.GL_CURRENT_RASTER_TEXTURE_COORDS
GL_CURRENT_RASTER_POSITION_VALID = _opengl.GL_CURRENT_RASTER_POSITION_VALID
GL_CURRENT_TEXTURE_COORDS = _opengl.GL_CURRENT_TEXTURE_COORDS
GL_INDEX_CLEAR_VALUE = _opengl.GL_INDEX_CLEAR_VALUE
GL_INDEX_MODE = _opengl.GL_INDEX_MODE
GL_INDEX_WRITEMASK = _opengl.GL_INDEX_WRITEMASK
GL_MODELVIEW_MATRIX = _opengl.GL_MODELVIEW_MATRIX
GL_MODELVIEW_STACK_DEPTH = _opengl.GL_MODELVIEW_STACK_DEPTH
GL_NAME_STACK_DEPTH = _opengl.GL_NAME_STACK_DEPTH
GL_PROJECTION_MATRIX = _opengl.GL_PROJECTION_MATRIX
GL_PROJECTION_STACK_DEPTH = _opengl.GL_PROJECTION_STACK_DEPTH
GL_RENDER_MODE = _opengl.GL_RENDER_MODE
GL_RGBA_MODE = _opengl.GL_RGBA_MODE
GL_TEXTURE_MATRIX = _opengl.GL_TEXTURE_MATRIX
GL_TEXTURE_STACK_DEPTH = _opengl.GL_TEXTURE_STACK_DEPTH
GL_VIEWPORT = _opengl.GL_VIEWPORT
GL_AUTO_NORMAL = _opengl.GL_AUTO_NORMAL
GL_MAP1_COLOR_4 = _opengl.GL_MAP1_COLOR_4
GL_MAP1_INDEX = _opengl.GL_MAP1_INDEX
GL_MAP1_NORMAL = _opengl.GL_MAP1_NORMAL
GL_MAP1_TEXTURE_COORD_1 = _opengl.GL_MAP1_TEXTURE_COORD_1
GL_MAP1_TEXTURE_COORD_2 = _opengl.GL_MAP1_TEXTURE_COORD_2
GL_MAP1_TEXTURE_COORD_3 = _opengl.GL_MAP1_TEXTURE_COORD_3
GL_MAP1_TEXTURE_COORD_4 = _opengl.GL_MAP1_TEXTURE_COORD_4
GL_MAP1_VERTEX_3 = _opengl.GL_MAP1_VERTEX_3
GL_MAP1_VERTEX_4 = _opengl.GL_MAP1_VERTEX_4
GL_MAP2_COLOR_4 = _opengl.GL_MAP2_COLOR_4
GL_MAP2_INDEX = _opengl.GL_MAP2_INDEX
GL_MAP2_NORMAL = _opengl.GL_MAP2_NORMAL
GL_MAP2_TEXTURE_COORD_1 = _opengl.GL_MAP2_TEXTURE_COORD_1
GL_MAP2_TEXTURE_COORD_2 = _opengl.GL_MAP2_TEXTURE_COORD_2
GL_MAP2_TEXTURE_COORD_3 = _opengl.GL_MAP2_TEXTURE_COORD_3
GL_MAP2_TEXTURE_COORD_4 = _opengl.GL_MAP2_TEXTURE_COORD_4
GL_MAP2_VERTEX_3 = _opengl.GL_MAP2_VERTEX_3
GL_MAP2_VERTEX_4 = _opengl.GL_MAP2_VERTEX_4
GL_MAP1_GRID_DOMAIN = _opengl.GL_MAP1_GRID_DOMAIN
GL_MAP1_GRID_SEGMENTS = _opengl.GL_MAP1_GRID_SEGMENTS
GL_MAP2_GRID_DOMAIN = _opengl.GL_MAP2_GRID_DOMAIN
GL_MAP2_GRID_SEGMENTS = _opengl.GL_MAP2_GRID_SEGMENTS
GL_COEFF = _opengl.GL_COEFF
GL_ORDER = _opengl.GL_ORDER
GL_DOMAIN = _opengl.GL_DOMAIN
GL_PERSPECTIVE_CORRECTION_HINT = _opengl.GL_PERSPECTIVE_CORRECTION_HINT
GL_POINT_SMOOTH_HINT = _opengl.GL_POINT_SMOOTH_HINT
GL_LINE_SMOOTH_HINT = _opengl.GL_LINE_SMOOTH_HINT
GL_POLYGON_SMOOTH_HINT = _opengl.GL_POLYGON_SMOOTH_HINT
GL_FOG_HINT = _opengl.GL_FOG_HINT
GL_DONT_CARE = _opengl.GL_DONT_CARE
GL_FASTEST = _opengl.GL_FASTEST
GL_NICEST = _opengl.GL_NICEST
GL_SCISSOR_BOX = _opengl.GL_SCISSOR_BOX
GL_SCISSOR_TEST = _opengl.GL_SCISSOR_TEST
GL_MAP_COLOR = _opengl.GL_MAP_COLOR
GL_MAP_STENCIL = _opengl.GL_MAP_STENCIL
GL_INDEX_SHIFT = _opengl.GL_INDEX_SHIFT
GL_INDEX_OFFSET = _opengl.GL_INDEX_OFFSET
GL_RED_SCALE = _opengl.GL_RED_SCALE
GL_RED_BIAS = _opengl.GL_RED_BIAS
GL_GREEN_SCALE = _opengl.GL_GREEN_SCALE
GL_GREEN_BIAS = _opengl.GL_GREEN_BIAS
GL_BLUE_SCALE = _opengl.GL_BLUE_SCALE
GL_BLUE_BIAS = _opengl.GL_BLUE_BIAS
GL_ALPHA_SCALE = _opengl.GL_ALPHA_SCALE
GL_ALPHA_BIAS = _opengl.GL_ALPHA_BIAS
GL_DEPTH_SCALE = _opengl.GL_DEPTH_SCALE
GL_DEPTH_BIAS = _opengl.GL_DEPTH_BIAS
GL_PIXEL_MAP_S_TO_S_SIZE = _opengl.GL_PIXEL_MAP_S_TO_S_SIZE
GL_PIXEL_MAP_I_TO_I_SIZE = _opengl.GL_PIXEL_MAP_I_TO_I_SIZE
GL_PIXEL_MAP_I_TO_R_SIZE = _opengl.GL_PIXEL_MAP_I_TO_R_SIZE
GL_PIXEL_MAP_I_TO_G_SIZE = _opengl.GL_PIXEL_MAP_I_TO_G_SIZE
GL_PIXEL_MAP_I_TO_B_SIZE = _opengl.GL_PIXEL_MAP_I_TO_B_SIZE
GL_PIXEL_MAP_I_TO_A_SIZE = _opengl.GL_PIXEL_MAP_I_TO_A_SIZE
GL_PIXEL_MAP_R_TO_R_SIZE = _opengl.GL_PIXEL_MAP_R_TO_R_SIZE
GL_PIXEL_MAP_G_TO_G_SIZE = _opengl.GL_PIXEL_MAP_G_TO_G_SIZE
GL_PIXEL_MAP_B_TO_B_SIZE = _opengl.GL_PIXEL_MAP_B_TO_B_SIZE
GL_PIXEL_MAP_A_TO_A_SIZE = _opengl.GL_PIXEL_MAP_A_TO_A_SIZE
GL_PIXEL_MAP_S_TO_S = _opengl.GL_PIXEL_MAP_S_TO_S
GL_PIXEL_MAP_I_TO_I = _opengl.GL_PIXEL_MAP_I_TO_I
GL_PIXEL_MAP_I_TO_R = _opengl.GL_PIXEL_MAP_I_TO_R
GL_PIXEL_MAP_I_TO_G = _opengl.GL_PIXEL_MAP_I_TO_G
GL_PIXEL_MAP_I_TO_B = _opengl.GL_PIXEL_MAP_I_TO_B
GL_PIXEL_MAP_I_TO_A = _opengl.GL_PIXEL_MAP_I_TO_A
GL_PIXEL_MAP_R_TO_R = _opengl.GL_PIXEL_MAP_R_TO_R
GL_PIXEL_MAP_G_TO_G = _opengl.GL_PIXEL_MAP_G_TO_G
GL_PIXEL_MAP_B_TO_B = _opengl.GL_PIXEL_MAP_B_TO_B
GL_PIXEL_MAP_A_TO_A = _opengl.GL_PIXEL_MAP_A_TO_A
GL_PACK_ALIGNMENT = _opengl.GL_PACK_ALIGNMENT
GL_PACK_LSB_FIRST = _opengl.GL_PACK_LSB_FIRST
GL_PACK_ROW_LENGTH = _opengl.GL_PACK_ROW_LENGTH
GL_PACK_SKIP_PIXELS = _opengl.GL_PACK_SKIP_PIXELS
GL_PACK_SKIP_ROWS = _opengl.GL_PACK_SKIP_ROWS
GL_PACK_SWAP_BYTES = _opengl.GL_PACK_SWAP_BYTES
GL_UNPACK_ALIGNMENT = _opengl.GL_UNPACK_ALIGNMENT
GL_UNPACK_LSB_FIRST = _opengl.GL_UNPACK_LSB_FIRST
GL_UNPACK_ROW_LENGTH = _opengl.GL_UNPACK_ROW_LENGTH
GL_UNPACK_SKIP_PIXELS = _opengl.GL_UNPACK_SKIP_PIXELS
GL_UNPACK_SKIP_ROWS = _opengl.GL_UNPACK_SKIP_ROWS
GL_UNPACK_SWAP_BYTES = _opengl.GL_UNPACK_SWAP_BYTES
GL_ZOOM_X = _opengl.GL_ZOOM_X
GL_ZOOM_Y = _opengl.GL_ZOOM_Y
GL_TEXTURE_ENV = _opengl.GL_TEXTURE_ENV
GL_TEXTURE_ENV_MODE = _opengl.GL_TEXTURE_ENV_MODE
GL_TEXTURE_1D = _opengl.GL_TEXTURE_1D
GL_TEXTURE_2D = _opengl.GL_TEXTURE_2D
GL_TEXTURE_WRAP_S = _opengl.GL_TEXTURE_WRAP_S
GL_TEXTURE_WRAP_T = _opengl.GL_TEXTURE_WRAP_T
GL_TEXTURE_MAG_FILTER = _opengl.GL_TEXTURE_MAG_FILTER
GL_TEXTURE_MIN_FILTER = _opengl.GL_TEXTURE_MIN_FILTER
GL_TEXTURE_ENV_COLOR = _opengl.GL_TEXTURE_ENV_COLOR
GL_TEXTURE_GEN_S = _opengl.GL_TEXTURE_GEN_S
GL_TEXTURE_GEN_T = _opengl.GL_TEXTURE_GEN_T
GL_TEXTURE_GEN_R = _opengl.GL_TEXTURE_GEN_R
GL_TEXTURE_GEN_Q = _opengl.GL_TEXTURE_GEN_Q
GL_TEXTURE_GEN_MODE = _opengl.GL_TEXTURE_GEN_MODE
GL_TEXTURE_BORDER_COLOR = _opengl.GL_TEXTURE_BORDER_COLOR
GL_TEXTURE_WIDTH = _opengl.GL_TEXTURE_WIDTH
GL_TEXTURE_HEIGHT = _opengl.GL_TEXTURE_HEIGHT
GL_TEXTURE_BORDER = _opengl.GL_TEXTURE_BORDER
GL_TEXTURE_COMPONENTS = _opengl.GL_TEXTURE_COMPONENTS
GL_TEXTURE_RED_SIZE = _opengl.GL_TEXTURE_RED_SIZE
GL_TEXTURE_GREEN_SIZE = _opengl.GL_TEXTURE_GREEN_SIZE
GL_TEXTURE_BLUE_SIZE = _opengl.GL_TEXTURE_BLUE_SIZE
GL_TEXTURE_ALPHA_SIZE = _opengl.GL_TEXTURE_ALPHA_SIZE
GL_TEXTURE_LUMINANCE_SIZE = _opengl.GL_TEXTURE_LUMINANCE_SIZE
GL_TEXTURE_INTENSITY_SIZE = _opengl.GL_TEXTURE_INTENSITY_SIZE
GL_NEAREST_MIPMAP_NEAREST = _opengl.GL_NEAREST_MIPMAP_NEAREST
GL_NEAREST_MIPMAP_LINEAR = _opengl.GL_NEAREST_MIPMAP_LINEAR
GL_LINEAR_MIPMAP_NEAREST = _opengl.GL_LINEAR_MIPMAP_NEAREST
GL_LINEAR_MIPMAP_LINEAR = _opengl.GL_LINEAR_MIPMAP_LINEAR
GL_OBJECT_LINEAR = _opengl.GL_OBJECT_LINEAR
GL_OBJECT_PLANE = _opengl.GL_OBJECT_PLANE
GL_EYE_LINEAR = _opengl.GL_EYE_LINEAR
GL_EYE_PLANE = _opengl.GL_EYE_PLANE
GL_SPHERE_MAP = _opengl.GL_SPHERE_MAP
GL_DECAL = _opengl.GL_DECAL
GL_MODULATE = _opengl.GL_MODULATE
GL_NEAREST = _opengl.GL_NEAREST
GL_REPEAT = _opengl.GL_REPEAT
GL_CLAMP = _opengl.GL_CLAMP
GL_S = _opengl.GL_S
GL_T = _opengl.GL_T
GL_R = _opengl.GL_R
GL_Q = _opengl.GL_Q
GL_VENDOR = _opengl.GL_VENDOR
GL_RENDERER = _opengl.GL_RENDERER
GL_VERSION = _opengl.GL_VERSION
GL_EXTENSIONS = _opengl.GL_EXTENSIONS
GL_NO_ERROR = _opengl.GL_NO_ERROR
GL_INVALID_ENUM = _opengl.GL_INVALID_ENUM
GL_INVALID_VALUE = _opengl.GL_INVALID_VALUE
GL_INVALID_OPERATION = _opengl.GL_INVALID_OPERATION
GL_STACK_OVERFLOW = _opengl.GL_STACK_OVERFLOW
GL_STACK_UNDERFLOW = _opengl.GL_STACK_UNDERFLOW
GL_OUT_OF_MEMORY = _opengl.GL_OUT_OF_MEMORY
GL_CURRENT_BIT = _opengl.GL_CURRENT_BIT
GL_POINT_BIT = _opengl.GL_POINT_BIT
GL_LINE_BIT = _opengl.GL_LINE_BIT
GL_POLYGON_BIT = _opengl.GL_POLYGON_BIT
GL_POLYGON_STIPPLE_BIT = _opengl.GL_POLYGON_STIPPLE_BIT
GL_PIXEL_MODE_BIT = _opengl.GL_PIXEL_MODE_BIT
GL_LIGHTING_BIT = _opengl.GL_LIGHTING_BIT
GL_FOG_BIT = _opengl.GL_FOG_BIT
GL_DEPTH_BUFFER_BIT = _opengl.GL_DEPTH_BUFFER_BIT
GL_ACCUM_BUFFER_BIT = _opengl.GL_ACCUM_BUFFER_BIT
GL_STENCIL_BUFFER_BIT = _opengl.GL_STENCIL_BUFFER_BIT
GL_VIEWPORT_BIT = _opengl.GL_VIEWPORT_BIT
GL_TRANSFORM_BIT = _opengl.GL_TRANSFORM_BIT
GL_ENABLE_BIT = _opengl.GL_ENABLE_BIT
GL_COLOR_BUFFER_BIT = _opengl.GL_COLOR_BUFFER_BIT
GL_HINT_BIT = _opengl.GL_HINT_BIT
GL_EVAL_BIT = _opengl.GL_EVAL_BIT
GL_LIST_BIT = _opengl.GL_LIST_BIT
GL_TEXTURE_BIT = _opengl.GL_TEXTURE_BIT
GL_SCISSOR_BIT = _opengl.GL_SCISSOR_BIT
GL_ALL_ATTRIB_BITS = _opengl.GL_ALL_ATTRIB_BITS
GL_PROXY_TEXTURE_1D = _opengl.GL_PROXY_TEXTURE_1D
GL_PROXY_TEXTURE_2D = _opengl.GL_PROXY_TEXTURE_2D
GL_TEXTURE_PRIORITY = _opengl.GL_TEXTURE_PRIORITY
GL_TEXTURE_RESIDENT = _opengl.GL_TEXTURE_RESIDENT
GL_TEXTURE_BINDING_1D = _opengl.GL_TEXTURE_BINDING_1D
GL_TEXTURE_BINDING_2D = _opengl.GL_TEXTURE_BINDING_2D
GL_TEXTURE_INTERNAL_FORMAT = _opengl.GL_TEXTURE_INTERNAL_FORMAT
GL_ALPHA4 = _opengl.GL_ALPHA4
GL_ALPHA8 = _opengl.GL_ALPHA8
GL_ALPHA12 = _opengl.GL_ALPHA12
GL_ALPHA16 = _opengl.GL_ALPHA16
GL_LUMINANCE4 = _opengl.GL_LUMINANCE4
GL_LUMINANCE8 = _opengl.GL_LUMINANCE8
GL_LUMINANCE12 = _opengl.GL_LUMINANCE12
GL_LUMINANCE16 = _opengl.GL_LUMINANCE16
GL_LUMINANCE4_ALPHA4 = _opengl.GL_LUMINANCE4_ALPHA4
GL_LUMINANCE6_ALPHA2 = _opengl.GL_LUMINANCE6_ALPHA2
GL_LUMINANCE8_ALPHA8 = _opengl.GL_LUMINANCE8_ALPHA8
GL_LUMINANCE12_ALPHA4 = _opengl.GL_LUMINANCE12_ALPHA4
GL_LUMINANCE12_ALPHA12 = _opengl.GL_LUMINANCE12_ALPHA12
GL_LUMINANCE16_ALPHA16 = _opengl.GL_LUMINANCE16_ALPHA16
GL_INTENSITY = _opengl.GL_INTENSITY
GL_INTENSITY4 = _opengl.GL_INTENSITY4
GL_INTENSITY8 = _opengl.GL_INTENSITY8
GL_INTENSITY12 = _opengl.GL_INTENSITY12
GL_INTENSITY16 = _opengl.GL_INTENSITY16
GL_R3_G3_B2 = _opengl.GL_R3_G3_B2
GL_RGB4 = _opengl.GL_RGB4
GL_RGB5 = _opengl.GL_RGB5
GL_RGB8 = _opengl.GL_RGB8
GL_RGB10 = _opengl.GL_RGB10
GL_RGB12 = _opengl.GL_RGB12
GL_RGB16 = _opengl.GL_RGB16
GL_RGBA2 = _opengl.GL_RGBA2
GL_RGBA4 = _opengl.GL_RGBA4
GL_RGB5_A1 = _opengl.GL_RGB5_A1
GL_RGBA8 = _opengl.GL_RGBA8
GL_RGB10_A2 = _opengl.GL_RGB10_A2
GL_RGBA12 = _opengl.GL_RGBA12
GL_RGBA16 = _opengl.GL_RGBA16
GL_CLIENT_PIXEL_STORE_BIT = _opengl.GL_CLIENT_PIXEL_STORE_BIT
GL_CLIENT_VERTEX_ARRAY_BIT = _opengl.GL_CLIENT_VERTEX_ARRAY_BIT
GL_ALL_CLIENT_ATTRIB_BITS = _opengl.GL_ALL_CLIENT_ATTRIB_BITS
GL_CLIENT_ALL_ATTRIB_BITS = _opengl.GL_CLIENT_ALL_ATTRIB_BITS

def glClearIndex(c):
    return _opengl.glClearIndex(c)
glClearIndex = _opengl.glClearIndex

def glClearColor(red, green, blue, alpha):
    return _opengl.glClearColor(red, green, blue, alpha)
glClearColor = _opengl.glClearColor

def glClear(mask):
    return _opengl.glClear(mask)
glClear = _opengl.glClear

def glIndexMask(mask):
    return _opengl.glIndexMask(mask)
glIndexMask = _opengl.glIndexMask

def glColorMask(red, green, blue, alpha):
    return _opengl.glColorMask(red, green, blue, alpha)
glColorMask = _opengl.glColorMask

def glAlphaFunc(func, ref):
    return _opengl.glAlphaFunc(func, ref)
glAlphaFunc = _opengl.glAlphaFunc

def glBlendFunc(sfactor, dfactor):
    return _opengl.glBlendFunc(sfactor, dfactor)
glBlendFunc = _opengl.glBlendFunc

def glLogicOp(opcode):
    return _opengl.glLogicOp(opcode)
glLogicOp = _opengl.glLogicOp

def glCullFace(mode):
    return _opengl.glCullFace(mode)
glCullFace = _opengl.glCullFace

def glFrontFace(mode):
    return _opengl.glFrontFace(mode)
glFrontFace = _opengl.glFrontFace

def glPointSize(size):
    return _opengl.glPointSize(size)
glPointSize = _opengl.glPointSize

def glLineWidth(width):
    return _opengl.glLineWidth(width)
glLineWidth = _opengl.glLineWidth

def glLineStipple(factor, pattern):
    return _opengl.glLineStipple(factor, pattern)
glLineStipple = _opengl.glLineStipple

def glPolygonMode(face, mode):
    return _opengl.glPolygonMode(face, mode)
glPolygonMode = _opengl.glPolygonMode

def glPolygonOffset(factor, units):
    return _opengl.glPolygonOffset(factor, units)
glPolygonOffset = _opengl.glPolygonOffset

def glPolygonStipple(mask):
    return _opengl.glPolygonStipple(mask)
glPolygonStipple = _opengl.glPolygonStipple

def glGetPolygonStipple(mask):
    return _opengl.glGetPolygonStipple(mask)
glGetPolygonStipple = _opengl.glGetPolygonStipple

def glEdgeFlag(flag):
    return _opengl.glEdgeFlag(flag)
glEdgeFlag = _opengl.glEdgeFlag

def glEdgeFlagv(flag):
    return _opengl.glEdgeFlagv(flag)
glEdgeFlagv = _opengl.glEdgeFlagv

def glScissor(x, y, width, height):
    return _opengl.glScissor(x, y, width, height)
glScissor = _opengl.glScissor

def glClipPlane(plane, equation):
    return _opengl.glClipPlane(plane, equation)
glClipPlane = _opengl.glClipPlane

def glGetClipPlane(plane, equation):
    return _opengl.glGetClipPlane(plane, equation)
glGetClipPlane = _opengl.glGetClipPlane

def glDrawBuffer(mode):
    return _opengl.glDrawBuffer(mode)
glDrawBuffer = _opengl.glDrawBuffer

def glReadBuffer(mode):
    return _opengl.glReadBuffer(mode)
glReadBuffer = _opengl.glReadBuffer

def glEnable(cap):
    return _opengl.glEnable(cap)
glEnable = _opengl.glEnable

def glDisable(cap):
    return _opengl.glDisable(cap)
glDisable = _opengl.glDisable

def glIsEnabled(cap):
    return _opengl.glIsEnabled(cap)
glIsEnabled = _opengl.glIsEnabled

def glEnableClientState(cap):
    return _opengl.glEnableClientState(cap)
glEnableClientState = _opengl.glEnableClientState

def glDisableClientState(cap):
    return _opengl.glDisableClientState(cap)
glDisableClientState = _opengl.glDisableClientState

def glGetBooleanv(pname, params):
    return _opengl.glGetBooleanv(pname, params)
glGetBooleanv = _opengl.glGetBooleanv

def glGetDoublev(pname, params):
    return _opengl.glGetDoublev(pname, params)
glGetDoublev = _opengl.glGetDoublev

def glGetFloatv(pname, params):
    return _opengl.glGetFloatv(pname, params)
glGetFloatv = _opengl.glGetFloatv

def glGetIntegerv(pname, params):
    return _opengl.glGetIntegerv(pname, params)
glGetIntegerv = _opengl.glGetIntegerv

def glPushAttrib(mask):
    return _opengl.glPushAttrib(mask)
glPushAttrib = _opengl.glPushAttrib

def glPopAttrib():
    return _opengl.glPopAttrib()
glPopAttrib = _opengl.glPopAttrib

def glPushClientAttrib(mask):
    return _opengl.glPushClientAttrib(mask)
glPushClientAttrib = _opengl.glPushClientAttrib

def glPopClientAttrib():
    return _opengl.glPopClientAttrib()
glPopClientAttrib = _opengl.glPopClientAttrib

def glRenderMode(mode):
    return _opengl.glRenderMode(mode)
glRenderMode = _opengl.glRenderMode

def glGetError():
    return _opengl.glGetError()
glGetError = _opengl.glGetError

def glGetString(name):
    return _opengl.glGetString(name)
glGetString = _opengl.glGetString

def glFinish():
    return _opengl.glFinish()
glFinish = _opengl.glFinish

def glFlush():
    return _opengl.glFlush()
glFlush = _opengl.glFlush

def glHint(target, mode):
    return _opengl.glHint(target, mode)
glHint = _opengl.glHint

def glClearDepth(depth):
    return _opengl.glClearDepth(depth)
glClearDepth = _opengl.glClearDepth

def glDepthFunc(func):
    return _opengl.glDepthFunc(func)
glDepthFunc = _opengl.glDepthFunc

def glDepthMask(flag):
    return _opengl.glDepthMask(flag)
glDepthMask = _opengl.glDepthMask

def glDepthRange(near_val, far_val):
    return _opengl.glDepthRange(near_val, far_val)
glDepthRange = _opengl.glDepthRange

def glClearAccum(red, green, blue, alpha):
    return _opengl.glClearAccum(red, green, blue, alpha)
glClearAccum = _opengl.glClearAccum

def glAccum(op, value):
    return _opengl.glAccum(op, value)
glAccum = _opengl.glAccum

def glMatrixMode(mode):
    return _opengl.glMatrixMode(mode)
glMatrixMode = _opengl.glMatrixMode

def glOrtho(left, right, bottom, top, near_val, far_val):
    return _opengl.glOrtho(left, right, bottom, top, near_val, far_val)
glOrtho = _opengl.glOrtho

def glFrustum(left, right, bottom, top, near_val, far_val):
    return _opengl.glFrustum(left, right, bottom, top, near_val, far_val)
glFrustum = _opengl.glFrustum

def glViewport(x, y, width, height):
    return _opengl.glViewport(x, y, width, height)
glViewport = _opengl.glViewport

def glPushMatrix():
    return _opengl.glPushMatrix()
glPushMatrix = _opengl.glPushMatrix

def glPopMatrix():
    return _opengl.glPopMatrix()
glPopMatrix = _opengl.glPopMatrix

def glLoadIdentity():
    return _opengl.glLoadIdentity()
glLoadIdentity = _opengl.glLoadIdentity

def glLoadMatrixd(m):
    return _opengl.glLoadMatrixd(m)
glLoadMatrixd = _opengl.glLoadMatrixd

def glLoadMatrixf(m):
    return _opengl.glLoadMatrixf(m)
glLoadMatrixf = _opengl.glLoadMatrixf

def glMultMatrixd(m):
    return _opengl.glMultMatrixd(m)
glMultMatrixd = _opengl.glMultMatrixd

def glMultMatrixf(m):
    return _opengl.glMultMatrixf(m)
glMultMatrixf = _opengl.glMultMatrixf

def glRotated(angle, x, y, z):
    return _opengl.glRotated(angle, x, y, z)
glRotated = _opengl.glRotated

def glRotatef(angle, x, y, z):
    return _opengl.glRotatef(angle, x, y, z)
glRotatef = _opengl.glRotatef

def glScaled(x, y, z):
    return _opengl.glScaled(x, y, z)
glScaled = _opengl.glScaled

def glScalef(x, y, z):
    return _opengl.glScalef(x, y, z)
glScalef = _opengl.glScalef

def glTranslated(x, y, z):
    return _opengl.glTranslated(x, y, z)
glTranslated = _opengl.glTranslated

def glTranslatef(x, y, z):
    return _opengl.glTranslatef(x, y, z)
glTranslatef = _opengl.glTranslatef

def glIsList(list):
    return _opengl.glIsList(list)
glIsList = _opengl.glIsList

def glDeleteLists(list, range):
    return _opengl.glDeleteLists(list, range)
glDeleteLists = _opengl.glDeleteLists

def glGenLists(range):
    return _opengl.glGenLists(range)
glGenLists = _opengl.glGenLists

def glNewList(list, mode):
    return _opengl.glNewList(list, mode)
glNewList = _opengl.glNewList

def glEndList():
    return _opengl.glEndList()
glEndList = _opengl.glEndList

def glCallList(list):
    return _opengl.glCallList(list)
glCallList = _opengl.glCallList

def glCallLists(n, type, lists):
    return _opengl.glCallLists(n, type, lists)
glCallLists = _opengl.glCallLists

def glListBase(base):
    return _opengl.glListBase(base)
glListBase = _opengl.glListBase

def glBegin(mode):
    return _opengl.glBegin(mode)
glBegin = _opengl.glBegin

def glEnd():
    return _opengl.glEnd()
glEnd = _opengl.glEnd

def glVertex2d(x, y):
    return _opengl.glVertex2d(x, y)
glVertex2d = _opengl.glVertex2d

def glVertex2f(x, y):
    return _opengl.glVertex2f(x, y)
glVertex2f = _opengl.glVertex2f

def glVertex2i(x, y):
    return _opengl.glVertex2i(x, y)
glVertex2i = _opengl.glVertex2i

def glVertex2s(x, y):
    return _opengl.glVertex2s(x, y)
glVertex2s = _opengl.glVertex2s

def glVertex3d(x, y, z):
    return _opengl.glVertex3d(x, y, z)
glVertex3d = _opengl.glVertex3d

def glVertex3f(x, y, z):
    return _opengl.glVertex3f(x, y, z)
glVertex3f = _opengl.glVertex3f

def glVertex3i(x, y, z):
    return _opengl.glVertex3i(x, y, z)
glVertex3i = _opengl.glVertex3i

def glVertex3s(x, y, z):
    return _opengl.glVertex3s(x, y, z)
glVertex3s = _opengl.glVertex3s

def glVertex4d(x, y, z, w):
    return _opengl.glVertex4d(x, y, z, w)
glVertex4d = _opengl.glVertex4d

def glVertex4f(x, y, z, w):
    return _opengl.glVertex4f(x, y, z, w)
glVertex4f = _opengl.glVertex4f

def glVertex4i(x, y, z, w):
    return _opengl.glVertex4i(x, y, z, w)
glVertex4i = _opengl.glVertex4i

def glVertex4s(x, y, z, w):
    return _opengl.glVertex4s(x, y, z, w)
glVertex4s = _opengl.glVertex4s

def glVertex2dv(v):
    return _opengl.glVertex2dv(v)
glVertex2dv = _opengl.glVertex2dv

def glVertex2fv(v):
    return _opengl.glVertex2fv(v)
glVertex2fv = _opengl.glVertex2fv

def glVertex2iv(v):
    return _opengl.glVertex2iv(v)
glVertex2iv = _opengl.glVertex2iv

def glVertex2sv(v):
    return _opengl.glVertex2sv(v)
glVertex2sv = _opengl.glVertex2sv

def glVertex3dv(v):
    return _opengl.glVertex3dv(v)
glVertex3dv = _opengl.glVertex3dv

def glVertex3fv(v):
    return _opengl.glVertex3fv(v)
glVertex3fv = _opengl.glVertex3fv

def glVertex3iv(v):
    return _opengl.glVertex3iv(v)
glVertex3iv = _opengl.glVertex3iv

def glVertex3sv(v):
    return _opengl.glVertex3sv(v)
glVertex3sv = _opengl.glVertex3sv

def glVertex4dv(v):
    return _opengl.glVertex4dv(v)
glVertex4dv = _opengl.glVertex4dv

def glVertex4fv(v):
    return _opengl.glVertex4fv(v)
glVertex4fv = _opengl.glVertex4fv

def glVertex4iv(v):
    return _opengl.glVertex4iv(v)
glVertex4iv = _opengl.glVertex4iv

def glVertex4sv(v):
    return _opengl.glVertex4sv(v)
glVertex4sv = _opengl.glVertex4sv

def glNormal3b(nx, ny, nz):
    return _opengl.glNormal3b(nx, ny, nz)
glNormal3b = _opengl.glNormal3b

def glNormal3d(nx, ny, nz):
    return _opengl.glNormal3d(nx, ny, nz)
glNormal3d = _opengl.glNormal3d

def glNormal3f(nx, ny, nz):
    return _opengl.glNormal3f(nx, ny, nz)
glNormal3f = _opengl.glNormal3f

def glNormal3i(nx, ny, nz):
    return _opengl.glNormal3i(nx, ny, nz)
glNormal3i = _opengl.glNormal3i

def glNormal3s(nx, ny, nz):
    return _opengl.glNormal3s(nx, ny, nz)
glNormal3s = _opengl.glNormal3s

def glNormal3bv(v):
    return _opengl.glNormal3bv(v)
glNormal3bv = _opengl.glNormal3bv

def glNormal3dv(v):
    return _opengl.glNormal3dv(v)
glNormal3dv = _opengl.glNormal3dv

def glNormal3fv(v):
    return _opengl.glNormal3fv(v)
glNormal3fv = _opengl.glNormal3fv

def glNormal3iv(v):
    return _opengl.glNormal3iv(v)
glNormal3iv = _opengl.glNormal3iv

def glNormal3sv(v):
    return _opengl.glNormal3sv(v)
glNormal3sv = _opengl.glNormal3sv

def glIndexd(c):
    return _opengl.glIndexd(c)
glIndexd = _opengl.glIndexd

def glIndexf(c):
    return _opengl.glIndexf(c)
glIndexf = _opengl.glIndexf

def glIndexi(c):
    return _opengl.glIndexi(c)
glIndexi = _opengl.glIndexi

def glIndexs(c):
    return _opengl.glIndexs(c)
glIndexs = _opengl.glIndexs

def glIndexub(c):
    return _opengl.glIndexub(c)
glIndexub = _opengl.glIndexub

def glIndexdv(c):
    return _opengl.glIndexdv(c)
glIndexdv = _opengl.glIndexdv

def glIndexfv(c):
    return _opengl.glIndexfv(c)
glIndexfv = _opengl.glIndexfv

def glIndexiv(c):
    return _opengl.glIndexiv(c)
glIndexiv = _opengl.glIndexiv

def glIndexsv(c):
    return _opengl.glIndexsv(c)
glIndexsv = _opengl.glIndexsv

def glIndexubv(c):
    return _opengl.glIndexubv(c)
glIndexubv = _opengl.glIndexubv

def glColor3b(red, green, blue):
    return _opengl.glColor3b(red, green, blue)
glColor3b = _opengl.glColor3b

def glColor3d(red, green, blue):
    return _opengl.glColor3d(red, green, blue)
glColor3d = _opengl.glColor3d

def glColor3f(red, green, blue):
    return _opengl.glColor3f(red, green, blue)
glColor3f = _opengl.glColor3f

def glColor3i(red, green, blue):
    return _opengl.glColor3i(red, green, blue)
glColor3i = _opengl.glColor3i

def glColor3s(red, green, blue):
    return _opengl.glColor3s(red, green, blue)
glColor3s = _opengl.glColor3s

def glColor3ub(red, green, blue):
    return _opengl.glColor3ub(red, green, blue)
glColor3ub = _opengl.glColor3ub

def glColor3ui(red, green, blue):
    return _opengl.glColor3ui(red, green, blue)
glColor3ui = _opengl.glColor3ui

def glColor3us(red, green, blue):
    return _opengl.glColor3us(red, green, blue)
glColor3us = _opengl.glColor3us

def glColor4b(red, green, blue, alpha):
    return _opengl.glColor4b(red, green, blue, alpha)
glColor4b = _opengl.glColor4b

def glColor4d(red, green, blue, alpha):
    return _opengl.glColor4d(red, green, blue, alpha)
glColor4d = _opengl.glColor4d

def glColor4f(red, green, blue, alpha):
    return _opengl.glColor4f(red, green, blue, alpha)
glColor4f = _opengl.glColor4f

def glColor4i(red, green, blue, alpha):
    return _opengl.glColor4i(red, green, blue, alpha)
glColor4i = _opengl.glColor4i

def glColor4s(red, green, blue, alpha):
    return _opengl.glColor4s(red, green, blue, alpha)
glColor4s = _opengl.glColor4s

def glColor4ub(red, green, blue, alpha):
    return _opengl.glColor4ub(red, green, blue, alpha)
glColor4ub = _opengl.glColor4ub

def glColor4ui(red, green, blue, alpha):
    return _opengl.glColor4ui(red, green, blue, alpha)
glColor4ui = _opengl.glColor4ui

def glColor4us(red, green, blue, alpha):
    return _opengl.glColor4us(red, green, blue, alpha)
glColor4us = _opengl.glColor4us

def glColor3bv(v):
    return _opengl.glColor3bv(v)
glColor3bv = _opengl.glColor3bv

def glColor3dv(v):
    return _opengl.glColor3dv(v)
glColor3dv = _opengl.glColor3dv

def glColor3fv(v):
    return _opengl.glColor3fv(v)
glColor3fv = _opengl.glColor3fv

def glColor3iv(v):
    return _opengl.glColor3iv(v)
glColor3iv = _opengl.glColor3iv

def glColor3sv(v):
    return _opengl.glColor3sv(v)
glColor3sv = _opengl.glColor3sv

def glColor3ubv(v):
    return _opengl.glColor3ubv(v)
glColor3ubv = _opengl.glColor3ubv

def glColor3uiv(v):
    return _opengl.glColor3uiv(v)
glColor3uiv = _opengl.glColor3uiv

def glColor3usv(v):
    return _opengl.glColor3usv(v)
glColor3usv = _opengl.glColor3usv

def glColor4bv(v):
    return _opengl.glColor4bv(v)
glColor4bv = _opengl.glColor4bv

def glColor4dv(v):
    return _opengl.glColor4dv(v)
glColor4dv = _opengl.glColor4dv

def glColor4fv(v):
    return _opengl.glColor4fv(v)
glColor4fv = _opengl.glColor4fv

def glColor4iv(v):
    return _opengl.glColor4iv(v)
glColor4iv = _opengl.glColor4iv

def glColor4sv(v):
    return _opengl.glColor4sv(v)
glColor4sv = _opengl.glColor4sv

def glColor4ubv(v):
    return _opengl.glColor4ubv(v)
glColor4ubv = _opengl.glColor4ubv

def glColor4uiv(v):
    return _opengl.glColor4uiv(v)
glColor4uiv = _opengl.glColor4uiv

def glColor4usv(v):
    return _opengl.glColor4usv(v)
glColor4usv = _opengl.glColor4usv

def glTexCoord1d(s):
    return _opengl.glTexCoord1d(s)
glTexCoord1d = _opengl.glTexCoord1d

def glTexCoord1f(s):
    return _opengl.glTexCoord1f(s)
glTexCoord1f = _opengl.glTexCoord1f

def glTexCoord1i(s):
    return _opengl.glTexCoord1i(s)
glTexCoord1i = _opengl.glTexCoord1i

def glTexCoord1s(s):
    return _opengl.glTexCoord1s(s)
glTexCoord1s = _opengl.glTexCoord1s

def glTexCoord2d(s, t):
    return _opengl.glTexCoord2d(s, t)
glTexCoord2d = _opengl.glTexCoord2d

def glTexCoord2f(s, t):
    return _opengl.glTexCoord2f(s, t)
glTexCoord2f = _opengl.glTexCoord2f

def glTexCoord2i(s, t):
    return _opengl.glTexCoord2i(s, t)
glTexCoord2i = _opengl.glTexCoord2i

def glTexCoord2s(s, t):
    return _opengl.glTexCoord2s(s, t)
glTexCoord2s = _opengl.glTexCoord2s

def glTexCoord3d(s, t, r):
    return _opengl.glTexCoord3d(s, t, r)
glTexCoord3d = _opengl.glTexCoord3d

def glTexCoord3f(s, t, r):
    return _opengl.glTexCoord3f(s, t, r)
glTexCoord3f = _opengl.glTexCoord3f

def glTexCoord3i(s, t, r):
    return _opengl.glTexCoord3i(s, t, r)
glTexCoord3i = _opengl.glTexCoord3i

def glTexCoord3s(s, t, r):
    return _opengl.glTexCoord3s(s, t, r)
glTexCoord3s = _opengl.glTexCoord3s

def glTexCoord4d(s, t, r, q):
    return _opengl.glTexCoord4d(s, t, r, q)
glTexCoord4d = _opengl.glTexCoord4d

def glTexCoord4f(s, t, r, q):
    return _opengl.glTexCoord4f(s, t, r, q)
glTexCoord4f = _opengl.glTexCoord4f

def glTexCoord4i(s, t, r, q):
    return _opengl.glTexCoord4i(s, t, r, q)
glTexCoord4i = _opengl.glTexCoord4i

def glTexCoord4s(s, t, r, q):
    return _opengl.glTexCoord4s(s, t, r, q)
glTexCoord4s = _opengl.glTexCoord4s

def glTexCoord1dv(v):
    return _opengl.glTexCoord1dv(v)
glTexCoord1dv = _opengl.glTexCoord1dv

def glTexCoord1fv(v):
    return _opengl.glTexCoord1fv(v)
glTexCoord1fv = _opengl.glTexCoord1fv

def glTexCoord1iv(v):
    return _opengl.glTexCoord1iv(v)
glTexCoord1iv = _opengl.glTexCoord1iv

def glTexCoord1sv(v):
    return _opengl.glTexCoord1sv(v)
glTexCoord1sv = _opengl.glTexCoord1sv

def glTexCoord2dv(v):
    return _opengl.glTexCoord2dv(v)
glTexCoord2dv = _opengl.glTexCoord2dv

def glTexCoord2fv(v):
    return _opengl.glTexCoord2fv(v)
glTexCoord2fv = _opengl.glTexCoord2fv

def glTexCoord2iv(v):
    return _opengl.glTexCoord2iv(v)
glTexCoord2iv = _opengl.glTexCoord2iv

def glTexCoord2sv(v):
    return _opengl.glTexCoord2sv(v)
glTexCoord2sv = _opengl.glTexCoord2sv

def glTexCoord3dv(v):
    return _opengl.glTexCoord3dv(v)
glTexCoord3dv = _opengl.glTexCoord3dv

def glTexCoord3fv(v):
    return _opengl.glTexCoord3fv(v)
glTexCoord3fv = _opengl.glTexCoord3fv

def glTexCoord3iv(v):
    return _opengl.glTexCoord3iv(v)
glTexCoord3iv = _opengl.glTexCoord3iv

def glTexCoord3sv(v):
    return _opengl.glTexCoord3sv(v)
glTexCoord3sv = _opengl.glTexCoord3sv

def glTexCoord4dv(v):
    return _opengl.glTexCoord4dv(v)
glTexCoord4dv = _opengl.glTexCoord4dv

def glTexCoord4fv(v):
    return _opengl.glTexCoord4fv(v)
glTexCoord4fv = _opengl.glTexCoord4fv

def glTexCoord4iv(v):
    return _opengl.glTexCoord4iv(v)
glTexCoord4iv = _opengl.glTexCoord4iv

def glTexCoord4sv(v):
    return _opengl.glTexCoord4sv(v)
glTexCoord4sv = _opengl.glTexCoord4sv

def glRasterPos2d(x, y):
    return _opengl.glRasterPos2d(x, y)
glRasterPos2d = _opengl.glRasterPos2d

def glRasterPos2f(x, y):
    return _opengl.glRasterPos2f(x, y)
glRasterPos2f = _opengl.glRasterPos2f

def glRasterPos2i(x, y):
    return _opengl.glRasterPos2i(x, y)
glRasterPos2i = _opengl.glRasterPos2i

def glRasterPos2s(x, y):
    return _opengl.glRasterPos2s(x, y)
glRasterPos2s = _opengl.glRasterPos2s

def glRasterPos3d(x, y, z):
    return _opengl.glRasterPos3d(x, y, z)
glRasterPos3d = _opengl.glRasterPos3d

def glRasterPos3f(x, y, z):
    return _opengl.glRasterPos3f(x, y, z)
glRasterPos3f = _opengl.glRasterPos3f

def glRasterPos3i(x, y, z):
    return _opengl.glRasterPos3i(x, y, z)
glRasterPos3i = _opengl.glRasterPos3i

def glRasterPos3s(x, y, z):
    return _opengl.glRasterPos3s(x, y, z)
glRasterPos3s = _opengl.glRasterPos3s

def glRasterPos4d(x, y, z, w):
    return _opengl.glRasterPos4d(x, y, z, w)
glRasterPos4d = _opengl.glRasterPos4d

def glRasterPos4f(x, y, z, w):
    return _opengl.glRasterPos4f(x, y, z, w)
glRasterPos4f = _opengl.glRasterPos4f

def glRasterPos4i(x, y, z, w):
    return _opengl.glRasterPos4i(x, y, z, w)
glRasterPos4i = _opengl.glRasterPos4i

def glRasterPos4s(x, y, z, w):
    return _opengl.glRasterPos4s(x, y, z, w)
glRasterPos4s = _opengl.glRasterPos4s

def glRasterPos2dv(v):
    return _opengl.glRasterPos2dv(v)
glRasterPos2dv = _opengl.glRasterPos2dv

def glRasterPos2fv(v):
    return _opengl.glRasterPos2fv(v)
glRasterPos2fv = _opengl.glRasterPos2fv

def glRasterPos2iv(v):
    return _opengl.glRasterPos2iv(v)
glRasterPos2iv = _opengl.glRasterPos2iv

def glRasterPos2sv(v):
    return _opengl.glRasterPos2sv(v)
glRasterPos2sv = _opengl.glRasterPos2sv

def glRasterPos3dv(v):
    return _opengl.glRasterPos3dv(v)
glRasterPos3dv = _opengl.glRasterPos3dv

def glRasterPos3fv(v):
    return _opengl.glRasterPos3fv(v)
glRasterPos3fv = _opengl.glRasterPos3fv

def glRasterPos3iv(v):
    return _opengl.glRasterPos3iv(v)
glRasterPos3iv = _opengl.glRasterPos3iv

def glRasterPos3sv(v):
    return _opengl.glRasterPos3sv(v)
glRasterPos3sv = _opengl.glRasterPos3sv

def glRasterPos4dv(v):
    return _opengl.glRasterPos4dv(v)
glRasterPos4dv = _opengl.glRasterPos4dv

def glRasterPos4fv(v):
    return _opengl.glRasterPos4fv(v)
glRasterPos4fv = _opengl.glRasterPos4fv

def glRasterPos4iv(v):
    return _opengl.glRasterPos4iv(v)
glRasterPos4iv = _opengl.glRasterPos4iv

def glRasterPos4sv(v):
    return _opengl.glRasterPos4sv(v)
glRasterPos4sv = _opengl.glRasterPos4sv

def glRectd(x1, y1, x2, y2):
    return _opengl.glRectd(x1, y1, x2, y2)
glRectd = _opengl.glRectd

def glRectf(x1, y1, x2, y2):
    return _opengl.glRectf(x1, y1, x2, y2)
glRectf = _opengl.glRectf

def glRecti(x1, y1, x2, y2):
    return _opengl.glRecti(x1, y1, x2, y2)
glRecti = _opengl.glRecti

def glRects(x1, y1, x2, y2):
    return _opengl.glRects(x1, y1, x2, y2)
glRects = _opengl.glRects

def glRectdv(v1, v2):
    return _opengl.glRectdv(v1, v2)
glRectdv = _opengl.glRectdv

def glRectfv(v1, v2):
    return _opengl.glRectfv(v1, v2)
glRectfv = _opengl.glRectfv

def glRectiv(v1, v2):
    return _opengl.glRectiv(v1, v2)
glRectiv = _opengl.glRectiv

def glRectsv(v1, v2):
    return _opengl.glRectsv(v1, v2)
glRectsv = _opengl.glRectsv

def glVertexPointer(size, type, stride, ptr):
    return _opengl.glVertexPointer(size, type, stride, ptr)
glVertexPointer = _opengl.glVertexPointer

def glNormalPointer(type, stride, ptr):
    return _opengl.glNormalPointer(type, stride, ptr)
glNormalPointer = _opengl.glNormalPointer

def glColorPointer(size, type, stride, ptr):
    return _opengl.glColorPointer(size, type, stride, ptr)
glColorPointer = _opengl.glColorPointer

def glIndexPointer(type, stride, ptr):
    return _opengl.glIndexPointer(type, stride, ptr)
glIndexPointer = _opengl.glIndexPointer

def glTexCoordPointer(size, type, stride, ptr):
    return _opengl.glTexCoordPointer(size, type, stride, ptr)
glTexCoordPointer = _opengl.glTexCoordPointer

def glEdgeFlagPointer(stride, ptr):
    return _opengl.glEdgeFlagPointer(stride, ptr)
glEdgeFlagPointer = _opengl.glEdgeFlagPointer

def glGetPointerv(pname, params):
    return _opengl.glGetPointerv(pname, params)
glGetPointerv = _opengl.glGetPointerv

def glArrayElement(i):
    return _opengl.glArrayElement(i)
glArrayElement = _opengl.glArrayElement

def glDrawArrays(mode, first, count):
    return _opengl.glDrawArrays(mode, first, count)
glDrawArrays = _opengl.glDrawArrays

def glDrawElements(mode, count, type, indices):
    return _opengl.glDrawElements(mode, count, type, indices)
glDrawElements = _opengl.glDrawElements

def glInterleavedArrays(format, stride, pointer):
    return _opengl.glInterleavedArrays(format, stride, pointer)
glInterleavedArrays = _opengl.glInterleavedArrays

def glShadeModel(mode):
    return _opengl.glShadeModel(mode)
glShadeModel = _opengl.glShadeModel

def glLightf(light, pname, param):
    return _opengl.glLightf(light, pname, param)
glLightf = _opengl.glLightf

def glLighti(light, pname, param):
    return _opengl.glLighti(light, pname, param)
glLighti = _opengl.glLighti

def glLightfv(light, pname, params):
    return _opengl.glLightfv(light, pname, params)
glLightfv = _opengl.glLightfv

def glLightiv(light, pname, params):
    return _opengl.glLightiv(light, pname, params)
glLightiv = _opengl.glLightiv

def glGetLightfv(light, pname, params):
    return _opengl.glGetLightfv(light, pname, params)
glGetLightfv = _opengl.glGetLightfv

def glGetLightiv(light, pname, params):
    return _opengl.glGetLightiv(light, pname, params)
glGetLightiv = _opengl.glGetLightiv

def glLightModelf(pname, param):
    return _opengl.glLightModelf(pname, param)
glLightModelf = _opengl.glLightModelf

def glLightModeli(pname, param):
    return _opengl.glLightModeli(pname, param)
glLightModeli = _opengl.glLightModeli

def glLightModelfv(pname, params):
    return _opengl.glLightModelfv(pname, params)
glLightModelfv = _opengl.glLightModelfv

def glLightModeliv(pname, params):
    return _opengl.glLightModeliv(pname, params)
glLightModeliv = _opengl.glLightModeliv

def glMaterialf(face, pname, param):
    return _opengl.glMaterialf(face, pname, param)
glMaterialf = _opengl.glMaterialf

def glMateriali(face, pname, param):
    return _opengl.glMateriali(face, pname, param)
glMateriali = _opengl.glMateriali

def glMaterialfv(face, pname, params):
    return _opengl.glMaterialfv(face, pname, params)
glMaterialfv = _opengl.glMaterialfv

def glMaterialiv(face, pname, params):
    return _opengl.glMaterialiv(face, pname, params)
glMaterialiv = _opengl.glMaterialiv

def glGetMaterialfv(face, pname, params):
    return _opengl.glGetMaterialfv(face, pname, params)
glGetMaterialfv = _opengl.glGetMaterialfv

def glGetMaterialiv(face, pname, params):
    return _opengl.glGetMaterialiv(face, pname, params)
glGetMaterialiv = _opengl.glGetMaterialiv

def glColorMaterial(face, mode):
    return _opengl.glColorMaterial(face, mode)
glColorMaterial = _opengl.glColorMaterial

def glPixelZoom(xfactor, yfactor):
    return _opengl.glPixelZoom(xfactor, yfactor)
glPixelZoom = _opengl.glPixelZoom

def glPixelStoref(pname, param):
    return _opengl.glPixelStoref(pname, param)
glPixelStoref = _opengl.glPixelStoref

def glPixelStorei(pname, param):
    return _opengl.glPixelStorei(pname, param)
glPixelStorei = _opengl.glPixelStorei

def glPixelTransferf(pname, param):
    return _opengl.glPixelTransferf(pname, param)
glPixelTransferf = _opengl.glPixelTransferf

def glPixelTransferi(pname, param):
    return _opengl.glPixelTransferi(pname, param)
glPixelTransferi = _opengl.glPixelTransferi

def glPixelMapfv(map, mapsize, values):
    return _opengl.glPixelMapfv(map, mapsize, values)
glPixelMapfv = _opengl.glPixelMapfv

def glPixelMapuiv(map, mapsize, values):
    return _opengl.glPixelMapuiv(map, mapsize, values)
glPixelMapuiv = _opengl.glPixelMapuiv

def glPixelMapusv(map, mapsize, values):
    return _opengl.glPixelMapusv(map, mapsize, values)
glPixelMapusv = _opengl.glPixelMapusv

def glGetPixelMapfv(map, values):
    return _opengl.glGetPixelMapfv(map, values)
glGetPixelMapfv = _opengl.glGetPixelMapfv

def glGetPixelMapuiv(map, values):
    return _opengl.glGetPixelMapuiv(map, values)
glGetPixelMapuiv = _opengl.glGetPixelMapuiv

def glGetPixelMapusv(map, values):
    return _opengl.glGetPixelMapusv(map, values)
glGetPixelMapusv = _opengl.glGetPixelMapusv

def glBitmap(width, height, xorig, yorig, xmove, ymove, bitmap):
    return _opengl.glBitmap(width, height, xorig, yorig, xmove, ymove, bitmap)
glBitmap = _opengl.glBitmap

def glReadPixels(x, y, width, height, format, type, pixels):
    return _opengl.glReadPixels(x, y, width, height, format, type, pixels)
glReadPixels = _opengl.glReadPixels

def glDrawPixels(width, height, format, type, pixels):
    return _opengl.glDrawPixels(width, height, format, type, pixels)
glDrawPixels = _opengl.glDrawPixels

def glCopyPixels(x, y, width, height, type):
    return _opengl.glCopyPixels(x, y, width, height, type)
glCopyPixels = _opengl.glCopyPixels

def glStencilFunc(func, ref, mask):
    return _opengl.glStencilFunc(func, ref, mask)
glStencilFunc = _opengl.glStencilFunc

def glStencilMask(mask):
    return _opengl.glStencilMask(mask)
glStencilMask = _opengl.glStencilMask

def glStencilOp(fail, zfail, zpass):
    return _opengl.glStencilOp(fail, zfail, zpass)
glStencilOp = _opengl.glStencilOp

def glClearStencil(s):
    return _opengl.glClearStencil(s)
glClearStencil = _opengl.glClearStencil

def glTexGend(coord, pname, param):
    return _opengl.glTexGend(coord, pname, param)
glTexGend = _opengl.glTexGend

def glTexGenf(coord, pname, param):
    return _opengl.glTexGenf(coord, pname, param)
glTexGenf = _opengl.glTexGenf

def glTexGeni(coord, pname, param):
    return _opengl.glTexGeni(coord, pname, param)
glTexGeni = _opengl.glTexGeni

def glTexGendv(coord, pname, params):
    return _opengl.glTexGendv(coord, pname, params)
glTexGendv = _opengl.glTexGendv

def glTexGenfv(coord, pname, params):
    return _opengl.glTexGenfv(coord, pname, params)
glTexGenfv = _opengl.glTexGenfv

def glTexGeniv(coord, pname, params):
    return _opengl.glTexGeniv(coord, pname, params)
glTexGeniv = _opengl.glTexGeniv

def glGetTexGendv(coord, pname, params):
    return _opengl.glGetTexGendv(coord, pname, params)
glGetTexGendv = _opengl.glGetTexGendv

def glGetTexGenfv(coord, pname, params):
    return _opengl.glGetTexGenfv(coord, pname, params)
glGetTexGenfv = _opengl.glGetTexGenfv

def glGetTexGeniv(coord, pname, params):
    return _opengl.glGetTexGeniv(coord, pname, params)
glGetTexGeniv = _opengl.glGetTexGeniv

def glTexEnvf(target, pname, param):
    return _opengl.glTexEnvf(target, pname, param)
glTexEnvf = _opengl.glTexEnvf

def glTexEnvi(target, pname, param):
    return _opengl.glTexEnvi(target, pname, param)
glTexEnvi = _opengl.glTexEnvi

def glTexEnvfv(target, pname, params):
    return _opengl.glTexEnvfv(target, pname, params)
glTexEnvfv = _opengl.glTexEnvfv

def glTexEnviv(target, pname, params):
    return _opengl.glTexEnviv(target, pname, params)
glTexEnviv = _opengl.glTexEnviv

def glGetTexEnvfv(target, pname, params):
    return _opengl.glGetTexEnvfv(target, pname, params)
glGetTexEnvfv = _opengl.glGetTexEnvfv

def glGetTexEnviv(target, pname, params):
    return _opengl.glGetTexEnviv(target, pname, params)
glGetTexEnviv = _opengl.glGetTexEnviv

def glTexParameterf(target, pname, param):
    return _opengl.glTexParameterf(target, pname, param)
glTexParameterf = _opengl.glTexParameterf

def glTexParameteri(target, pname, param):
    return _opengl.glTexParameteri(target, pname, param)
glTexParameteri = _opengl.glTexParameteri

def glTexParameterfv(target, pname, params):
    return _opengl.glTexParameterfv(target, pname, params)
glTexParameterfv = _opengl.glTexParameterfv

def glTexParameteriv(target, pname, params):
    return _opengl.glTexParameteriv(target, pname, params)
glTexParameteriv = _opengl.glTexParameteriv

def glGetTexParameterfv(target, pname, params):
    return _opengl.glGetTexParameterfv(target, pname, params)
glGetTexParameterfv = _opengl.glGetTexParameterfv

def glGetTexParameteriv(target, pname, params):
    return _opengl.glGetTexParameteriv(target, pname, params)
glGetTexParameteriv = _opengl.glGetTexParameteriv

def glGetTexLevelParameterfv(target, level, pname, params):
    return _opengl.glGetTexLevelParameterfv(target, level, pname, params)
glGetTexLevelParameterfv = _opengl.glGetTexLevelParameterfv

def glGetTexLevelParameteriv(target, level, pname, params):
    return _opengl.glGetTexLevelParameteriv(target, level, pname, params)
glGetTexLevelParameteriv = _opengl.glGetTexLevelParameteriv

def glTexImage1D(target, level, internalFormat, width, border, format, type, pixels):
    return _opengl.glTexImage1D(target, level, internalFormat, width, border, format, type, pixels)
glTexImage1D = _opengl.glTexImage1D

def glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels):
    return _opengl.glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels)
glTexImage2D = _opengl.glTexImage2D

def glGetTexImage(target, level, format, type, pixels):
    return _opengl.glGetTexImage(target, level, format, type, pixels)
glGetTexImage = _opengl.glGetTexImage

def glGenTextures(n, textures):
    return _opengl.glGenTextures(n, textures)
glGenTextures = _opengl.glGenTextures

def glDeleteTextures(n, textures):
    return _opengl.glDeleteTextures(n, textures)
glDeleteTextures = _opengl.glDeleteTextures

def glBindTexture(target, texture):
    return _opengl.glBindTexture(target, texture)
glBindTexture = _opengl.glBindTexture

def glPrioritizeTextures(n, textures, priorities):
    return _opengl.glPrioritizeTextures(n, textures, priorities)
glPrioritizeTextures = _opengl.glPrioritizeTextures

def glAreTexturesResident(n, textures, residences):
    return _opengl.glAreTexturesResident(n, textures, residences)
glAreTexturesResident = _opengl.glAreTexturesResident

def glIsTexture(texture):
    return _opengl.glIsTexture(texture)
glIsTexture = _opengl.glIsTexture

def glTexSubImage1D(target, level, xoffset, width, format, type, pixels):
    return _opengl.glTexSubImage1D(target, level, xoffset, width, format, type, pixels)
glTexSubImage1D = _opengl.glTexSubImage1D

def glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels):
    return _opengl.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels)
glTexSubImage2D = _opengl.glTexSubImage2D

def glCopyTexImage1D(target, level, internalformat, x, y, width, border):
    return _opengl.glCopyTexImage1D(target, level, internalformat, x, y, width, border)
glCopyTexImage1D = _opengl.glCopyTexImage1D

def glCopyTexImage2D(target, level, internalformat, x, y, width, height, border):
    return _opengl.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border)
glCopyTexImage2D = _opengl.glCopyTexImage2D

def glCopyTexSubImage1D(target, level, xoffset, x, y, width):
    return _opengl.glCopyTexSubImage1D(target, level, xoffset, x, y, width)
glCopyTexSubImage1D = _opengl.glCopyTexSubImage1D

def glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height):
    return _opengl.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height)
glCopyTexSubImage2D = _opengl.glCopyTexSubImage2D

def glMap1d(target, u1, u2, stride, order, points):
    return _opengl.glMap1d(target, u1, u2, stride, order, points)
glMap1d = _opengl.glMap1d

def glMap1f(target, u1, u2, stride, order, points):
    return _opengl.glMap1f(target, u1, u2, stride, order, points)
glMap1f = _opengl.glMap1f

def glMap2d(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points):
    return _opengl.glMap2d(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
glMap2d = _opengl.glMap2d

def glMap2f(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points):
    return _opengl.glMap2f(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
glMap2f = _opengl.glMap2f

def glGetMapdv(target, query, v):
    return _opengl.glGetMapdv(target, query, v)
glGetMapdv = _opengl.glGetMapdv

def glGetMapfv(target, query, v):
    return _opengl.glGetMapfv(target, query, v)
glGetMapfv = _opengl.glGetMapfv

def glGetMapiv(target, query, v):
    return _opengl.glGetMapiv(target, query, v)
glGetMapiv = _opengl.glGetMapiv

def glEvalCoord1d(u):
    return _opengl.glEvalCoord1d(u)
glEvalCoord1d = _opengl.glEvalCoord1d

def glEvalCoord1f(u):
    return _opengl.glEvalCoord1f(u)
glEvalCoord1f = _opengl.glEvalCoord1f

def glEvalCoord1dv(u):
    return _opengl.glEvalCoord1dv(u)
glEvalCoord1dv = _opengl.glEvalCoord1dv

def glEvalCoord1fv(u):
    return _opengl.glEvalCoord1fv(u)
glEvalCoord1fv = _opengl.glEvalCoord1fv

def glEvalCoord2d(u, v):
    return _opengl.glEvalCoord2d(u, v)
glEvalCoord2d = _opengl.glEvalCoord2d

def glEvalCoord2f(u, v):
    return _opengl.glEvalCoord2f(u, v)
glEvalCoord2f = _opengl.glEvalCoord2f

def glEvalCoord2dv(u):
    return _opengl.glEvalCoord2dv(u)
glEvalCoord2dv = _opengl.glEvalCoord2dv

def glEvalCoord2fv(u):
    return _opengl.glEvalCoord2fv(u)
glEvalCoord2fv = _opengl.glEvalCoord2fv

def glMapGrid1d(un, u1, u2):
    return _opengl.glMapGrid1d(un, u1, u2)
glMapGrid1d = _opengl.glMapGrid1d

def glMapGrid1f(un, u1, u2):
    return _opengl.glMapGrid1f(un, u1, u2)
glMapGrid1f = _opengl.glMapGrid1f

def glMapGrid2d(un, u1, u2, vn, v1, v2):
    return _opengl.glMapGrid2d(un, u1, u2, vn, v1, v2)
glMapGrid2d = _opengl.glMapGrid2d

def glMapGrid2f(un, u1, u2, vn, v1, v2):
    return _opengl.glMapGrid2f(un, u1, u2, vn, v1, v2)
glMapGrid2f = _opengl.glMapGrid2f

def glEvalPoint1(i):
    return _opengl.glEvalPoint1(i)
glEvalPoint1 = _opengl.glEvalPoint1

def glEvalPoint2(i, j):
    return _opengl.glEvalPoint2(i, j)
glEvalPoint2 = _opengl.glEvalPoint2

def glEvalMesh1(mode, i1, i2):
    return _opengl.glEvalMesh1(mode, i1, i2)
glEvalMesh1 = _opengl.glEvalMesh1

def glEvalMesh2(mode, i1, i2, j1, j2):
    return _opengl.glEvalMesh2(mode, i1, i2, j1, j2)
glEvalMesh2 = _opengl.glEvalMesh2

def glFogf(pname, param):
    return _opengl.glFogf(pname, param)
glFogf = _opengl.glFogf

def glFogi(pname, param):
    return _opengl.glFogi(pname, param)
glFogi = _opengl.glFogi

def glFogfv(pname, params):
    return _opengl.glFogfv(pname, params)
glFogfv = _opengl.glFogfv

def glFogiv(pname, params):
    return _opengl.glFogiv(pname, params)
glFogiv = _opengl.glFogiv

def glFeedbackBuffer(size, type, buffer):
    return _opengl.glFeedbackBuffer(size, type, buffer)
glFeedbackBuffer = _opengl.glFeedbackBuffer

def glPassThrough(token):
    return _opengl.glPassThrough(token)
glPassThrough = _opengl.glPassThrough

def glSelectBuffer(size, buffer):
    return _opengl.glSelectBuffer(size, buffer)
glSelectBuffer = _opengl.glSelectBuffer

def glInitNames():
    return _opengl.glInitNames()
glInitNames = _opengl.glInitNames

def glLoadName(name):
    return _opengl.glLoadName(name)
glLoadName = _opengl.glLoadName

def glPushName(name):
    return _opengl.glPushName(name)
glPushName = _opengl.glPushName

def glPopName():
    return _opengl.glPopName()
glPopName = _opengl.glPopName
GL_RESCALE_NORMAL = _opengl.GL_RESCALE_NORMAL
GL_CLAMP_TO_EDGE = _opengl.GL_CLAMP_TO_EDGE
GL_MAX_ELEMENTS_VERTICES = _opengl.GL_MAX_ELEMENTS_VERTICES
GL_MAX_ELEMENTS_INDICES = _opengl.GL_MAX_ELEMENTS_INDICES
GL_BGR = _opengl.GL_BGR
GL_BGRA = _opengl.GL_BGRA
GL_UNSIGNED_BYTE_3_3_2 = _opengl.GL_UNSIGNED_BYTE_3_3_2
GL_UNSIGNED_BYTE_2_3_3_REV = _opengl.GL_UNSIGNED_BYTE_2_3_3_REV
GL_UNSIGNED_SHORT_5_6_5 = _opengl.GL_UNSIGNED_SHORT_5_6_5
GL_UNSIGNED_SHORT_5_6_5_REV = _opengl.GL_UNSIGNED_SHORT_5_6_5_REV
GL_UNSIGNED_SHORT_4_4_4_4 = _opengl.GL_UNSIGNED_SHORT_4_4_4_4
GL_UNSIGNED_SHORT_4_4_4_4_REV = _opengl.GL_UNSIGNED_SHORT_4_4_4_4_REV
GL_UNSIGNED_SHORT_5_5_5_1 = _opengl.GL_UNSIGNED_SHORT_5_5_5_1
GL_UNSIGNED_SHORT_1_5_5_5_REV = _opengl.GL_UNSIGNED_SHORT_1_5_5_5_REV
GL_UNSIGNED_INT_8_8_8_8 = _opengl.GL_UNSIGNED_INT_8_8_8_8
GL_UNSIGNED_INT_8_8_8_8_REV = _opengl.GL_UNSIGNED_INT_8_8_8_8_REV
GL_UNSIGNED_INT_10_10_10_2 = _opengl.GL_UNSIGNED_INT_10_10_10_2
GL_UNSIGNED_INT_2_10_10_10_REV = _opengl.GL_UNSIGNED_INT_2_10_10_10_REV
GL_LIGHT_MODEL_COLOR_CONTROL = _opengl.GL_LIGHT_MODEL_COLOR_CONTROL
GL_SINGLE_COLOR = _opengl.GL_SINGLE_COLOR
GL_SEPARATE_SPECULAR_COLOR = _opengl.GL_SEPARATE_SPECULAR_COLOR
GL_TEXTURE_MIN_LOD = _opengl.GL_TEXTURE_MIN_LOD
GL_TEXTURE_MAX_LOD = _opengl.GL_TEXTURE_MAX_LOD
GL_TEXTURE_BASE_LEVEL = _opengl.GL_TEXTURE_BASE_LEVEL
GL_TEXTURE_MAX_LEVEL = _opengl.GL_TEXTURE_MAX_LEVEL
GL_SMOOTH_POINT_SIZE_RANGE = _opengl.GL_SMOOTH_POINT_SIZE_RANGE
GL_SMOOTH_POINT_SIZE_GRANULARITY = _opengl.GL_SMOOTH_POINT_SIZE_GRANULARITY
GL_SMOOTH_LINE_WIDTH_RANGE = _opengl.GL_SMOOTH_LINE_WIDTH_RANGE
GL_SMOOTH_LINE_WIDTH_GRANULARITY = _opengl.GL_SMOOTH_LINE_WIDTH_GRANULARITY
GL_ALIASED_POINT_SIZE_RANGE = _opengl.GL_ALIASED_POINT_SIZE_RANGE
GL_ALIASED_LINE_WIDTH_RANGE = _opengl.GL_ALIASED_LINE_WIDTH_RANGE
GL_PACK_SKIP_IMAGES = _opengl.GL_PACK_SKIP_IMAGES
GL_PACK_IMAGE_HEIGHT = _opengl.GL_PACK_IMAGE_HEIGHT
GL_UNPACK_SKIP_IMAGES = _opengl.GL_UNPACK_SKIP_IMAGES
GL_UNPACK_IMAGE_HEIGHT = _opengl.GL_UNPACK_IMAGE_HEIGHT
GL_TEXTURE_3D = _opengl.GL_TEXTURE_3D
GL_PROXY_TEXTURE_3D = _opengl.GL_PROXY_TEXTURE_3D
GL_TEXTURE_DEPTH = _opengl.GL_TEXTURE_DEPTH
GL_TEXTURE_WRAP_R = _opengl.GL_TEXTURE_WRAP_R
GL_MAX_3D_TEXTURE_SIZE = _opengl.GL_MAX_3D_TEXTURE_SIZE
GL_TEXTURE_BINDING_3D = _opengl.GL_TEXTURE_BINDING_3D

def glDrawRangeElements(mode, start, end, count, type, indices):
    return _opengl.glDrawRangeElements(mode, start, end, count, type, indices)
glDrawRangeElements = _opengl.glDrawRangeElements

def glTexImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels):
    return _opengl.glTexImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels)
glTexImage3D = _opengl.glTexImage3D

def glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels):
    return _opengl.glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
glTexSubImage3D = _opengl.glTexSubImage3D

def glCopyTexSubImage3D(target, level, xoffset, yoffset, zoffset, x, y, width, height):
    return _opengl.glCopyTexSubImage3D(target, level, xoffset, yoffset, zoffset, x, y, width, height)
glCopyTexSubImage3D = _opengl.glCopyTexSubImage3D
GL_CONSTANT_COLOR = _opengl.GL_CONSTANT_COLOR
GL_ONE_MINUS_CONSTANT_COLOR = _opengl.GL_ONE_MINUS_CONSTANT_COLOR
GL_CONSTANT_ALPHA = _opengl.GL_CONSTANT_ALPHA
GL_ONE_MINUS_CONSTANT_ALPHA = _opengl.GL_ONE_MINUS_CONSTANT_ALPHA
GL_COLOR_TABLE = _opengl.GL_COLOR_TABLE
GL_POST_CONVOLUTION_COLOR_TABLE = _opengl.GL_POST_CONVOLUTION_COLOR_TABLE
GL_POST_COLOR_MATRIX_COLOR_TABLE = _opengl.GL_POST_COLOR_MATRIX_COLOR_TABLE
GL_PROXY_COLOR_TABLE = _opengl.GL_PROXY_COLOR_TABLE
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = _opengl.GL_PROXY_POST_CONVOLUTION_COLOR_TABLE
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = _opengl.GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
GL_COLOR_TABLE_SCALE = _opengl.GL_COLOR_TABLE_SCALE
GL_COLOR_TABLE_BIAS = _opengl.GL_COLOR_TABLE_BIAS
GL_COLOR_TABLE_FORMAT = _opengl.GL_COLOR_TABLE_FORMAT
GL_COLOR_TABLE_WIDTH = _opengl.GL_COLOR_TABLE_WIDTH
GL_COLOR_TABLE_RED_SIZE = _opengl.GL_COLOR_TABLE_RED_SIZE
GL_COLOR_TABLE_GREEN_SIZE = _opengl.GL_COLOR_TABLE_GREEN_SIZE
GL_COLOR_TABLE_BLUE_SIZE = _opengl.GL_COLOR_TABLE_BLUE_SIZE
GL_COLOR_TABLE_ALPHA_SIZE = _opengl.GL_COLOR_TABLE_ALPHA_SIZE
GL_COLOR_TABLE_LUMINANCE_SIZE = _opengl.GL_COLOR_TABLE_LUMINANCE_SIZE
GL_COLOR_TABLE_INTENSITY_SIZE = _opengl.GL_COLOR_TABLE_INTENSITY_SIZE
GL_CONVOLUTION_1D = _opengl.GL_CONVOLUTION_1D
GL_CONVOLUTION_2D = _opengl.GL_CONVOLUTION_2D
GL_SEPARABLE_2D = _opengl.GL_SEPARABLE_2D
GL_CONVOLUTION_BORDER_MODE = _opengl.GL_CONVOLUTION_BORDER_MODE
GL_CONVOLUTION_FILTER_SCALE = _opengl.GL_CONVOLUTION_FILTER_SCALE
GL_CONVOLUTION_FILTER_BIAS = _opengl.GL_CONVOLUTION_FILTER_BIAS
GL_REDUCE = _opengl.GL_REDUCE
GL_CONVOLUTION_FORMAT = _opengl.GL_CONVOLUTION_FORMAT
GL_CONVOLUTION_WIDTH = _opengl.GL_CONVOLUTION_WIDTH
GL_CONVOLUTION_HEIGHT = _opengl.GL_CONVOLUTION_HEIGHT
GL_MAX_CONVOLUTION_WIDTH = _opengl.GL_MAX_CONVOLUTION_WIDTH
GL_MAX_CONVOLUTION_HEIGHT = _opengl.GL_MAX_CONVOLUTION_HEIGHT
GL_POST_CONVOLUTION_RED_SCALE = _opengl.GL_POST_CONVOLUTION_RED_SCALE
GL_POST_CONVOLUTION_GREEN_SCALE = _opengl.GL_POST_CONVOLUTION_GREEN_SCALE
GL_POST_CONVOLUTION_BLUE_SCALE = _opengl.GL_POST_CONVOLUTION_BLUE_SCALE
GL_POST_CONVOLUTION_ALPHA_SCALE = _opengl.GL_POST_CONVOLUTION_ALPHA_SCALE
GL_POST_CONVOLUTION_RED_BIAS = _opengl.GL_POST_CONVOLUTION_RED_BIAS
GL_POST_CONVOLUTION_GREEN_BIAS = _opengl.GL_POST_CONVOLUTION_GREEN_BIAS
GL_POST_CONVOLUTION_BLUE_BIAS = _opengl.GL_POST_CONVOLUTION_BLUE_BIAS
GL_POST_CONVOLUTION_ALPHA_BIAS = _opengl.GL_POST_CONVOLUTION_ALPHA_BIAS
GL_CONSTANT_BORDER = _opengl.GL_CONSTANT_BORDER
GL_REPLICATE_BORDER = _opengl.GL_REPLICATE_BORDER
GL_CONVOLUTION_BORDER_COLOR = _opengl.GL_CONVOLUTION_BORDER_COLOR
GL_COLOR_MATRIX = _opengl.GL_COLOR_MATRIX
GL_COLOR_MATRIX_STACK_DEPTH = _opengl.GL_COLOR_MATRIX_STACK_DEPTH
GL_MAX_COLOR_MATRIX_STACK_DEPTH = _opengl.GL_MAX_COLOR_MATRIX_STACK_DEPTH
GL_POST_COLOR_MATRIX_RED_SCALE = _opengl.GL_POST_COLOR_MATRIX_RED_SCALE
GL_POST_COLOR_MATRIX_GREEN_SCALE = _opengl.GL_POST_COLOR_MATRIX_GREEN_SCALE
GL_POST_COLOR_MATRIX_BLUE_SCALE = _opengl.GL_POST_COLOR_MATRIX_BLUE_SCALE
GL_POST_COLOR_MATRIX_ALPHA_SCALE = _opengl.GL_POST_COLOR_MATRIX_ALPHA_SCALE
GL_POST_COLOR_MATRIX_RED_BIAS = _opengl.GL_POST_COLOR_MATRIX_RED_BIAS
GL_POST_COLOR_MATRIX_GREEN_BIAS = _opengl.GL_POST_COLOR_MATRIX_GREEN_BIAS
GL_POST_COLOR_MATRIX_BLUE_BIAS = _opengl.GL_POST_COLOR_MATRIX_BLUE_BIAS
GL_POST_COLOR_MATRIX_ALPHA_BIAS = _opengl.GL_POST_COLOR_MATRIX_ALPHA_BIAS
GL_HISTOGRAM = _opengl.GL_HISTOGRAM
GL_PROXY_HISTOGRAM = _opengl.GL_PROXY_HISTOGRAM
GL_HISTOGRAM_WIDTH = _opengl.GL_HISTOGRAM_WIDTH
GL_HISTOGRAM_FORMAT = _opengl.GL_HISTOGRAM_FORMAT
GL_HISTOGRAM_RED_SIZE = _opengl.GL_HISTOGRAM_RED_SIZE
GL_HISTOGRAM_GREEN_SIZE = _opengl.GL_HISTOGRAM_GREEN_SIZE
GL_HISTOGRAM_BLUE_SIZE = _opengl.GL_HISTOGRAM_BLUE_SIZE
GL_HISTOGRAM_ALPHA_SIZE = _opengl.GL_HISTOGRAM_ALPHA_SIZE
GL_HISTOGRAM_LUMINANCE_SIZE = _opengl.GL_HISTOGRAM_LUMINANCE_SIZE
GL_HISTOGRAM_SINK = _opengl.GL_HISTOGRAM_SINK
GL_MINMAX = _opengl.GL_MINMAX
GL_MINMAX_FORMAT = _opengl.GL_MINMAX_FORMAT
GL_MINMAX_SINK = _opengl.GL_MINMAX_SINK
GL_TABLE_TOO_LARGE = _opengl.GL_TABLE_TOO_LARGE
GL_BLEND_EQUATION = _opengl.GL_BLEND_EQUATION
GL_MIN = _opengl.GL_MIN
GL_MAX = _opengl.GL_MAX
GL_FUNC_ADD = _opengl.GL_FUNC_ADD
GL_FUNC_SUBTRACT = _opengl.GL_FUNC_SUBTRACT
GL_FUNC_REVERSE_SUBTRACT = _opengl.GL_FUNC_REVERSE_SUBTRACT
GL_BLEND_COLOR = _opengl.GL_BLEND_COLOR

def glColorTable(target, internalformat, width, format, type, table):
    return _opengl.glColorTable(target, internalformat, width, format, type, table)
glColorTable = _opengl.glColorTable

def glColorSubTable(target, start, count, format, type, data):
    return _opengl.glColorSubTable(target, start, count, format, type, data)
glColorSubTable = _opengl.glColorSubTable

def glColorTableParameteriv(target, pname, params):
    return _opengl.glColorTableParameteriv(target, pname, params)
glColorTableParameteriv = _opengl.glColorTableParameteriv

def glColorTableParameterfv(target, pname, params):
    return _opengl.glColorTableParameterfv(target, pname, params)
glColorTableParameterfv = _opengl.glColorTableParameterfv

def glCopyColorSubTable(target, start, x, y, width):
    return _opengl.glCopyColorSubTable(target, start, x, y, width)
glCopyColorSubTable = _opengl.glCopyColorSubTable

def glCopyColorTable(target, internalformat, x, y, width):
    return _opengl.glCopyColorTable(target, internalformat, x, y, width)
glCopyColorTable = _opengl.glCopyColorTable

def glGetColorTable(target, format, type, table):
    return _opengl.glGetColorTable(target, format, type, table)
glGetColorTable = _opengl.glGetColorTable

def glGetColorTableParameterfv(target, pname, params):
    return _opengl.glGetColorTableParameterfv(target, pname, params)
glGetColorTableParameterfv = _opengl.glGetColorTableParameterfv

def glGetColorTableParameteriv(target, pname, params):
    return _opengl.glGetColorTableParameteriv(target, pname, params)
glGetColorTableParameteriv = _opengl.glGetColorTableParameteriv

def glBlendEquation(mode):
    return _opengl.glBlendEquation(mode)
glBlendEquation = _opengl.glBlendEquation

def glBlendColor(red, green, blue, alpha):
    return _opengl.glBlendColor(red, green, blue, alpha)
glBlendColor = _opengl.glBlendColor

def glHistogram(target, width, internalformat, sink):
    return _opengl.glHistogram(target, width, internalformat, sink)
glHistogram = _opengl.glHistogram

def glResetHistogram(target):
    return _opengl.glResetHistogram(target)
glResetHistogram = _opengl.glResetHistogram

def glGetHistogram(target, reset, format, type, values):
    return _opengl.glGetHistogram(target, reset, format, type, values)
glGetHistogram = _opengl.glGetHistogram

def glGetHistogramParameterfv(target, pname, params):
    return _opengl.glGetHistogramParameterfv(target, pname, params)
glGetHistogramParameterfv = _opengl.glGetHistogramParameterfv

def glGetHistogramParameteriv(target, pname, params):
    return _opengl.glGetHistogramParameteriv(target, pname, params)
glGetHistogramParameteriv = _opengl.glGetHistogramParameteriv

def glMinmax(target, internalformat, sink):
    return _opengl.glMinmax(target, internalformat, sink)
glMinmax = _opengl.glMinmax

def glResetMinmax(target):
    return _opengl.glResetMinmax(target)
glResetMinmax = _opengl.glResetMinmax

def glGetMinmax(target, reset, format, types, values):
    return _opengl.glGetMinmax(target, reset, format, types, values)
glGetMinmax = _opengl.glGetMinmax

def glGetMinmaxParameterfv(target, pname, params):
    return _opengl.glGetMinmaxParameterfv(target, pname, params)
glGetMinmaxParameterfv = _opengl.glGetMinmaxParameterfv

def glGetMinmaxParameteriv(target, pname, params):
    return _opengl.glGetMinmaxParameteriv(target, pname, params)
glGetMinmaxParameteriv = _opengl.glGetMinmaxParameteriv

def glConvolutionFilter1D(target, internalformat, width, format, type, image):
    return _opengl.glConvolutionFilter1D(target, internalformat, width, format, type, image)
glConvolutionFilter1D = _opengl.glConvolutionFilter1D

def glConvolutionFilter2D(target, internalformat, width, height, format, type, image):
    return _opengl.glConvolutionFilter2D(target, internalformat, width, height, format, type, image)
glConvolutionFilter2D = _opengl.glConvolutionFilter2D

def glConvolutionParameterf(target, pname, params):
    return _opengl.glConvolutionParameterf(target, pname, params)
glConvolutionParameterf = _opengl.glConvolutionParameterf

def glConvolutionParameterfv(target, pname, params):
    return _opengl.glConvolutionParameterfv(target, pname, params)
glConvolutionParameterfv = _opengl.glConvolutionParameterfv

def glConvolutionParameteri(target, pname, params):
    return _opengl.glConvolutionParameteri(target, pname, params)
glConvolutionParameteri = _opengl.glConvolutionParameteri

def glConvolutionParameteriv(target, pname, params):
    return _opengl.glConvolutionParameteriv(target, pname, params)
glConvolutionParameteriv = _opengl.glConvolutionParameteriv

def glCopyConvolutionFilter1D(target, internalformat, x, y, width):
    return _opengl.glCopyConvolutionFilter1D(target, internalformat, x, y, width)
glCopyConvolutionFilter1D = _opengl.glCopyConvolutionFilter1D

def glCopyConvolutionFilter2D(target, internalformat, x, y, width, height):
    return _opengl.glCopyConvolutionFilter2D(target, internalformat, x, y, width, height)
glCopyConvolutionFilter2D = _opengl.glCopyConvolutionFilter2D

def glGetConvolutionFilter(target, format, type, image):
    return _opengl.glGetConvolutionFilter(target, format, type, image)
glGetConvolutionFilter = _opengl.glGetConvolutionFilter

def glGetConvolutionParameterfv(target, pname, params):
    return _opengl.glGetConvolutionParameterfv(target, pname, params)
glGetConvolutionParameterfv = _opengl.glGetConvolutionParameterfv

def glGetConvolutionParameteriv(target, pname, params):
    return _opengl.glGetConvolutionParameteriv(target, pname, params)
glGetConvolutionParameteriv = _opengl.glGetConvolutionParameteriv

def glSeparableFilter2D(target, internalformat, width, height, format, type, row, column):
    return _opengl.glSeparableFilter2D(target, internalformat, width, height, format, type, row, column)
glSeparableFilter2D = _opengl.glSeparableFilter2D

def glGetSeparableFilter(target, format, type, row, column, span):
    return _opengl.glGetSeparableFilter(target, format, type, row, column, span)
glGetSeparableFilter = _opengl.glGetSeparableFilter
GL_TEXTURE0 = _opengl.GL_TEXTURE0
GL_TEXTURE1 = _opengl.GL_TEXTURE1
GL_TEXTURE2 = _opengl.GL_TEXTURE2
GL_TEXTURE3 = _opengl.GL_TEXTURE3
GL_TEXTURE4 = _opengl.GL_TEXTURE4
GL_TEXTURE5 = _opengl.GL_TEXTURE5
GL_TEXTURE6 = _opengl.GL_TEXTURE6
GL_TEXTURE7 = _opengl.GL_TEXTURE7
GL_TEXTURE8 = _opengl.GL_TEXTURE8
GL_TEXTURE9 = _opengl.GL_TEXTURE9
GL_TEXTURE10 = _opengl.GL_TEXTURE10
GL_TEXTURE11 = _opengl.GL_TEXTURE11
GL_TEXTURE12 = _opengl.GL_TEXTURE12
GL_TEXTURE13 = _opengl.GL_TEXTURE13
GL_TEXTURE14 = _opengl.GL_TEXTURE14
GL_TEXTURE15 = _opengl.GL_TEXTURE15
GL_TEXTURE16 = _opengl.GL_TEXTURE16
GL_TEXTURE17 = _opengl.GL_TEXTURE17
GL_TEXTURE18 = _opengl.GL_TEXTURE18
GL_TEXTURE19 = _opengl.GL_TEXTURE19
GL_TEXTURE20 = _opengl.GL_TEXTURE20
GL_TEXTURE21 = _opengl.GL_TEXTURE21
GL_TEXTURE22 = _opengl.GL_TEXTURE22
GL_TEXTURE23 = _opengl.GL_TEXTURE23
GL_TEXTURE24 = _opengl.GL_TEXTURE24
GL_TEXTURE25 = _opengl.GL_TEXTURE25
GL_TEXTURE26 = _opengl.GL_TEXTURE26
GL_TEXTURE27 = _opengl.GL_TEXTURE27
GL_TEXTURE28 = _opengl.GL_TEXTURE28
GL_TEXTURE29 = _opengl.GL_TEXTURE29
GL_TEXTURE30 = _opengl.GL_TEXTURE30
GL_TEXTURE31 = _opengl.GL_TEXTURE31
GL_ACTIVE_TEXTURE = _opengl.GL_ACTIVE_TEXTURE
GL_CLIENT_ACTIVE_TEXTURE = _opengl.GL_CLIENT_ACTIVE_TEXTURE
GL_MAX_TEXTURE_UNITS = _opengl.GL_MAX_TEXTURE_UNITS
GL_NORMAL_MAP = _opengl.GL_NORMAL_MAP
GL_REFLECTION_MAP = _opengl.GL_REFLECTION_MAP
GL_TEXTURE_CUBE_MAP = _opengl.GL_TEXTURE_CUBE_MAP
GL_TEXTURE_BINDING_CUBE_MAP = _opengl.GL_TEXTURE_BINDING_CUBE_MAP
GL_TEXTURE_CUBE_MAP_POSITIVE_X = _opengl.GL_TEXTURE_CUBE_MAP_POSITIVE_X
GL_TEXTURE_CUBE_MAP_NEGATIVE_X = _opengl.GL_TEXTURE_CUBE_MAP_NEGATIVE_X
GL_TEXTURE_CUBE_MAP_POSITIVE_Y = _opengl.GL_TEXTURE_CUBE_MAP_POSITIVE_Y
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = _opengl.GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
GL_TEXTURE_CUBE_MAP_POSITIVE_Z = _opengl.GL_TEXTURE_CUBE_MAP_POSITIVE_Z
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = _opengl.GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
GL_PROXY_TEXTURE_CUBE_MAP = _opengl.GL_PROXY_TEXTURE_CUBE_MAP
GL_MAX_CUBE_MAP_TEXTURE_SIZE = _opengl.GL_MAX_CUBE_MAP_TEXTURE_SIZE
GL_COMPRESSED_ALPHA = _opengl.GL_COMPRESSED_ALPHA
GL_COMPRESSED_LUMINANCE = _opengl.GL_COMPRESSED_LUMINANCE
GL_COMPRESSED_LUMINANCE_ALPHA = _opengl.GL_COMPRESSED_LUMINANCE_ALPHA
GL_COMPRESSED_INTENSITY = _opengl.GL_COMPRESSED_INTENSITY
GL_COMPRESSED_RGB = _opengl.GL_COMPRESSED_RGB
GL_COMPRESSED_RGBA = _opengl.GL_COMPRESSED_RGBA
GL_TEXTURE_COMPRESSION_HINT = _opengl.GL_TEXTURE_COMPRESSION_HINT
GL_TEXTURE_COMPRESSED_IMAGE_SIZE = _opengl.GL_TEXTURE_COMPRESSED_IMAGE_SIZE
GL_TEXTURE_COMPRESSED = _opengl.GL_TEXTURE_COMPRESSED
GL_NUM_COMPRESSED_TEXTURE_FORMATS = _opengl.GL_NUM_COMPRESSED_TEXTURE_FORMATS
GL_COMPRESSED_TEXTURE_FORMATS = _opengl.GL_COMPRESSED_TEXTURE_FORMATS
GL_MULTISAMPLE = _opengl.GL_MULTISAMPLE
GL_SAMPLE_ALPHA_TO_COVERAGE = _opengl.GL_SAMPLE_ALPHA_TO_COVERAGE
GL_SAMPLE_ALPHA_TO_ONE = _opengl.GL_SAMPLE_ALPHA_TO_ONE
GL_SAMPLE_COVERAGE = _opengl.GL_SAMPLE_COVERAGE
GL_SAMPLE_BUFFERS = _opengl.GL_SAMPLE_BUFFERS
GL_SAMPLES = _opengl.GL_SAMPLES
GL_SAMPLE_COVERAGE_VALUE = _opengl.GL_SAMPLE_COVERAGE_VALUE
GL_SAMPLE_COVERAGE_INVERT = _opengl.GL_SAMPLE_COVERAGE_INVERT
GL_MULTISAMPLE_BIT = _opengl.GL_MULTISAMPLE_BIT
GL_TRANSPOSE_MODELVIEW_MATRIX = _opengl.GL_TRANSPOSE_MODELVIEW_MATRIX
GL_TRANSPOSE_PROJECTION_MATRIX = _opengl.GL_TRANSPOSE_PROJECTION_MATRIX
GL_TRANSPOSE_TEXTURE_MATRIX = _opengl.GL_TRANSPOSE_TEXTURE_MATRIX
GL_TRANSPOSE_COLOR_MATRIX = _opengl.GL_TRANSPOSE_COLOR_MATRIX
GL_COMBINE = _opengl.GL_COMBINE
GL_COMBINE_RGB = _opengl.GL_COMBINE_RGB
GL_COMBINE_ALPHA = _opengl.GL_COMBINE_ALPHA
GL_SOURCE0_RGB = _opengl.GL_SOURCE0_RGB
GL_SOURCE1_RGB = _opengl.GL_SOURCE1_RGB
GL_SOURCE2_RGB = _opengl.GL_SOURCE2_RGB
GL_SOURCE0_ALPHA = _opengl.GL_SOURCE0_ALPHA
GL_SOURCE1_ALPHA = _opengl.GL_SOURCE1_ALPHA
GL_SOURCE2_ALPHA = _opengl.GL_SOURCE2_ALPHA
GL_OPERAND0_RGB = _opengl.GL_OPERAND0_RGB
GL_OPERAND1_RGB = _opengl.GL_OPERAND1_RGB
GL_OPERAND2_RGB = _opengl.GL_OPERAND2_RGB
GL_OPERAND0_ALPHA = _opengl.GL_OPERAND0_ALPHA
GL_OPERAND1_ALPHA = _opengl.GL_OPERAND1_ALPHA
GL_OPERAND2_ALPHA = _opengl.GL_OPERAND2_ALPHA
GL_RGB_SCALE = _opengl.GL_RGB_SCALE
GL_ADD_SIGNED = _opengl.GL_ADD_SIGNED
GL_INTERPOLATE = _opengl.GL_INTERPOLATE
GL_SUBTRACT = _opengl.GL_SUBTRACT
GL_CONSTANT = _opengl.GL_CONSTANT
GL_PRIMARY_COLOR = _opengl.GL_PRIMARY_COLOR
GL_PREVIOUS = _opengl.GL_PREVIOUS
GL_DOT3_RGB = _opengl.GL_DOT3_RGB
GL_DOT3_RGBA = _opengl.GL_DOT3_RGBA
GL_CLAMP_TO_BORDER = _opengl.GL_CLAMP_TO_BORDER

def glActiveTexture(texture):
    return _opengl.glActiveTexture(texture)
glActiveTexture = _opengl.glActiveTexture

def glClientActiveTexture(texture):
    return _opengl.glClientActiveTexture(texture)
glClientActiveTexture = _opengl.glClientActiveTexture

def glCompressedTexImage1D(target, level, internalformat, width, border, imageSize, data):
    return _opengl.glCompressedTexImage1D(target, level, internalformat, width, border, imageSize, data)
glCompressedTexImage1D = _opengl.glCompressedTexImage1D

def glCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data):
    return _opengl.glCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data)
glCompressedTexImage2D = _opengl.glCompressedTexImage2D

def glCompressedTexImage3D(target, level, internalformat, width, height, depth, border, imageSize, data):
    return _opengl.glCompressedTexImage3D(target, level, internalformat, width, height, depth, border, imageSize, data)
glCompressedTexImage3D = _opengl.glCompressedTexImage3D

def glCompressedTexSubImage1D(target, level, xoffset, width, format, imageSize, data):
    return _opengl.glCompressedTexSubImage1D(target, level, xoffset, width, format, imageSize, data)
glCompressedTexSubImage1D = _opengl.glCompressedTexSubImage1D

def glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data):
    return _opengl.glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data)
glCompressedTexSubImage2D = _opengl.glCompressedTexSubImage2D

def glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data):
    return _opengl.glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
glCompressedTexSubImage3D = _opengl.glCompressedTexSubImage3D

def glGetCompressedTexImage(target, lod, img):
    return _opengl.glGetCompressedTexImage(target, lod, img)
glGetCompressedTexImage = _opengl.glGetCompressedTexImage

def glMultiTexCoord1d(target, s):
    return _opengl.glMultiTexCoord1d(target, s)
glMultiTexCoord1d = _opengl.glMultiTexCoord1d

def glMultiTexCoord1dv(target, v):
    return _opengl.glMultiTexCoord1dv(target, v)
glMultiTexCoord1dv = _opengl.glMultiTexCoord1dv

def glMultiTexCoord1f(target, s):
    return _opengl.glMultiTexCoord1f(target, s)
glMultiTexCoord1f = _opengl.glMultiTexCoord1f

def glMultiTexCoord1fv(target, v):
    return _opengl.glMultiTexCoord1fv(target, v)
glMultiTexCoord1fv = _opengl.glMultiTexCoord1fv

def glMultiTexCoord1i(target, s):
    return _opengl.glMultiTexCoord1i(target, s)
glMultiTexCoord1i = _opengl.glMultiTexCoord1i

def glMultiTexCoord1iv(target, v):
    return _opengl.glMultiTexCoord1iv(target, v)
glMultiTexCoord1iv = _opengl.glMultiTexCoord1iv

def glMultiTexCoord1s(target, s):
    return _opengl.glMultiTexCoord1s(target, s)
glMultiTexCoord1s = _opengl.glMultiTexCoord1s

def glMultiTexCoord1sv(target, v):
    return _opengl.glMultiTexCoord1sv(target, v)
glMultiTexCoord1sv = _opengl.glMultiTexCoord1sv

def glMultiTexCoord2d(target, s, t):
    return _opengl.glMultiTexCoord2d(target, s, t)
glMultiTexCoord2d = _opengl.glMultiTexCoord2d

def glMultiTexCoord2dv(target, v):
    return _opengl.glMultiTexCoord2dv(target, v)
glMultiTexCoord2dv = _opengl.glMultiTexCoord2dv

def glMultiTexCoord2f(target, s, t):
    return _opengl.glMultiTexCoord2f(target, s, t)
glMultiTexCoord2f = _opengl.glMultiTexCoord2f

def glMultiTexCoord2fv(target, v):
    return _opengl.glMultiTexCoord2fv(target, v)
glMultiTexCoord2fv = _opengl.glMultiTexCoord2fv

def glMultiTexCoord2i(target, s, t):
    return _opengl.glMultiTexCoord2i(target, s, t)
glMultiTexCoord2i = _opengl.glMultiTexCoord2i

def glMultiTexCoord2iv(target, v):
    return _opengl.glMultiTexCoord2iv(target, v)
glMultiTexCoord2iv = _opengl.glMultiTexCoord2iv

def glMultiTexCoord2s(target, s, t):
    return _opengl.glMultiTexCoord2s(target, s, t)
glMultiTexCoord2s = _opengl.glMultiTexCoord2s

def glMultiTexCoord2sv(target, v):
    return _opengl.glMultiTexCoord2sv(target, v)
glMultiTexCoord2sv = _opengl.glMultiTexCoord2sv

def glMultiTexCoord3d(target, s, t, r):
    return _opengl.glMultiTexCoord3d(target, s, t, r)
glMultiTexCoord3d = _opengl.glMultiTexCoord3d

def glMultiTexCoord3dv(target, v):
    return _opengl.glMultiTexCoord3dv(target, v)
glMultiTexCoord3dv = _opengl.glMultiTexCoord3dv

def glMultiTexCoord3f(target, s, t, r):
    return _opengl.glMultiTexCoord3f(target, s, t, r)
glMultiTexCoord3f = _opengl.glMultiTexCoord3f

def glMultiTexCoord3fv(target, v):
    return _opengl.glMultiTexCoord3fv(target, v)
glMultiTexCoord3fv = _opengl.glMultiTexCoord3fv

def glMultiTexCoord3i(target, s, t, r):
    return _opengl.glMultiTexCoord3i(target, s, t, r)
glMultiTexCoord3i = _opengl.glMultiTexCoord3i

def glMultiTexCoord3iv(target, v):
    return _opengl.glMultiTexCoord3iv(target, v)
glMultiTexCoord3iv = _opengl.glMultiTexCoord3iv

def glMultiTexCoord3s(target, s, t, r):
    return _opengl.glMultiTexCoord3s(target, s, t, r)
glMultiTexCoord3s = _opengl.glMultiTexCoord3s

def glMultiTexCoord3sv(target, v):
    return _opengl.glMultiTexCoord3sv(target, v)
glMultiTexCoord3sv = _opengl.glMultiTexCoord3sv

def glMultiTexCoord4d(target, s, t, r, q):
    return _opengl.glMultiTexCoord4d(target, s, t, r, q)
glMultiTexCoord4d = _opengl.glMultiTexCoord4d

def glMultiTexCoord4dv(target, v):
    return _opengl.glMultiTexCoord4dv(target, v)
glMultiTexCoord4dv = _opengl.glMultiTexCoord4dv

def glMultiTexCoord4f(target, s, t, r, q):
    return _opengl.glMultiTexCoord4f(target, s, t, r, q)
glMultiTexCoord4f = _opengl.glMultiTexCoord4f

def glMultiTexCoord4fv(target, v):
    return _opengl.glMultiTexCoord4fv(target, v)
glMultiTexCoord4fv = _opengl.glMultiTexCoord4fv

def glMultiTexCoord4i(target, s, t, r, q):
    return _opengl.glMultiTexCoord4i(target, s, t, r, q)
glMultiTexCoord4i = _opengl.glMultiTexCoord4i

def glMultiTexCoord4iv(target, v):
    return _opengl.glMultiTexCoord4iv(target, v)
glMultiTexCoord4iv = _opengl.glMultiTexCoord4iv

def glMultiTexCoord4s(target, s, t, r, q):
    return _opengl.glMultiTexCoord4s(target, s, t, r, q)
glMultiTexCoord4s = _opengl.glMultiTexCoord4s

def glMultiTexCoord4sv(target, v):
    return _opengl.glMultiTexCoord4sv(target, v)
glMultiTexCoord4sv = _opengl.glMultiTexCoord4sv

def glLoadTransposeMatrixd(m):
    return _opengl.glLoadTransposeMatrixd(m)
glLoadTransposeMatrixd = _opengl.glLoadTransposeMatrixd

def glLoadTransposeMatrixf(m):
    return _opengl.glLoadTransposeMatrixf(m)
glLoadTransposeMatrixf = _opengl.glLoadTransposeMatrixf

def glMultTransposeMatrixd(m):
    return _opengl.glMultTransposeMatrixd(m)
glMultTransposeMatrixd = _opengl.glMultTransposeMatrixd

def glMultTransposeMatrixf(m):
    return _opengl.glMultTransposeMatrixf(m)
glMultTransposeMatrixf = _opengl.glMultTransposeMatrixf

def glSampleCoverage(value, invert):
    return _opengl.glSampleCoverage(value, invert)
glSampleCoverage = _opengl.glSampleCoverage
GL_ARB_multitexture = _opengl.GL_ARB_multitexture
GL_TEXTURE0_ARB = _opengl.GL_TEXTURE0_ARB
GL_TEXTURE1_ARB = _opengl.GL_TEXTURE1_ARB
GL_TEXTURE2_ARB = _opengl.GL_TEXTURE2_ARB
GL_TEXTURE3_ARB = _opengl.GL_TEXTURE3_ARB
GL_TEXTURE4_ARB = _opengl.GL_TEXTURE4_ARB
GL_TEXTURE5_ARB = _opengl.GL_TEXTURE5_ARB
GL_TEXTURE6_ARB = _opengl.GL_TEXTURE6_ARB
GL_TEXTURE7_ARB = _opengl.GL_TEXTURE7_ARB
GL_TEXTURE8_ARB = _opengl.GL_TEXTURE8_ARB
GL_TEXTURE9_ARB = _opengl.GL_TEXTURE9_ARB
GL_TEXTURE10_ARB = _opengl.GL_TEXTURE10_ARB
GL_TEXTURE11_ARB = _opengl.GL_TEXTURE11_ARB
GL_TEXTURE12_ARB = _opengl.GL_TEXTURE12_ARB
GL_TEXTURE13_ARB = _opengl.GL_TEXTURE13_ARB
GL_TEXTURE14_ARB = _opengl.GL_TEXTURE14_ARB
GL_TEXTURE15_ARB = _opengl.GL_TEXTURE15_ARB
GL_TEXTURE16_ARB = _opengl.GL_TEXTURE16_ARB
GL_TEXTURE17_ARB = _opengl.GL_TEXTURE17_ARB
GL_TEXTURE18_ARB = _opengl.GL_TEXTURE18_ARB
GL_TEXTURE19_ARB = _opengl.GL_TEXTURE19_ARB
GL_TEXTURE20_ARB = _opengl.GL_TEXTURE20_ARB
GL_TEXTURE21_ARB = _opengl.GL_TEXTURE21_ARB
GL_TEXTURE22_ARB = _opengl.GL_TEXTURE22_ARB
GL_TEXTURE23_ARB = _opengl.GL_TEXTURE23_ARB
GL_TEXTURE24_ARB = _opengl.GL_TEXTURE24_ARB
GL_TEXTURE25_ARB = _opengl.GL_TEXTURE25_ARB
GL_TEXTURE26_ARB = _opengl.GL_TEXTURE26_ARB
GL_TEXTURE27_ARB = _opengl.GL_TEXTURE27_ARB
GL_TEXTURE28_ARB = _opengl.GL_TEXTURE28_ARB
GL_TEXTURE29_ARB = _opengl.GL_TEXTURE29_ARB
GL_TEXTURE30_ARB = _opengl.GL_TEXTURE30_ARB
GL_TEXTURE31_ARB = _opengl.GL_TEXTURE31_ARB
GL_ACTIVE_TEXTURE_ARB = _opengl.GL_ACTIVE_TEXTURE_ARB
GL_CLIENT_ACTIVE_TEXTURE_ARB = _opengl.GL_CLIENT_ACTIVE_TEXTURE_ARB
GL_MAX_TEXTURE_UNITS_ARB = _opengl.GL_MAX_TEXTURE_UNITS_ARB

def glActiveTextureARB(texture):
    return _opengl.glActiveTextureARB(texture)
glActiveTextureARB = _opengl.glActiveTextureARB

def glClientActiveTextureARB(texture):
    return _opengl.glClientActiveTextureARB(texture)
glClientActiveTextureARB = _opengl.glClientActiveTextureARB

def glMultiTexCoord1dARB(target, s):
    return _opengl.glMultiTexCoord1dARB(target, s)
glMultiTexCoord1dARB = _opengl.glMultiTexCoord1dARB

def glMultiTexCoord1dvARB(target, v):
    return _opengl.glMultiTexCoord1dvARB(target, v)
glMultiTexCoord1dvARB = _opengl.glMultiTexCoord1dvARB

def glMultiTexCoord1fARB(target, s):
    return _opengl.glMultiTexCoord1fARB(target, s)
glMultiTexCoord1fARB = _opengl.glMultiTexCoord1fARB

def glMultiTexCoord1fvARB(target, v):
    return _opengl.glMultiTexCoord1fvARB(target, v)
glMultiTexCoord1fvARB = _opengl.glMultiTexCoord1fvARB

def glMultiTexCoord1iARB(target, s):
    return _opengl.glMultiTexCoord1iARB(target, s)
glMultiTexCoord1iARB = _opengl.glMultiTexCoord1iARB

def glMultiTexCoord1ivARB(target, v):
    return _opengl.glMultiTexCoord1ivARB(target, v)
glMultiTexCoord1ivARB = _opengl.glMultiTexCoord1ivARB

def glMultiTexCoord1sARB(target, s):
    return _opengl.glMultiTexCoord1sARB(target, s)
glMultiTexCoord1sARB = _opengl.glMultiTexCoord1sARB

def glMultiTexCoord1svARB(target, v):
    return _opengl.glMultiTexCoord1svARB(target, v)
glMultiTexCoord1svARB = _opengl.glMultiTexCoord1svARB

def glMultiTexCoord2dARB(target, s, t):
    return _opengl.glMultiTexCoord2dARB(target, s, t)
glMultiTexCoord2dARB = _opengl.glMultiTexCoord2dARB

def glMultiTexCoord2dvARB(target, v):
    return _opengl.glMultiTexCoord2dvARB(target, v)
glMultiTexCoord2dvARB = _opengl.glMultiTexCoord2dvARB

def glMultiTexCoord2fARB(target, s, t):
    return _opengl.glMultiTexCoord2fARB(target, s, t)
glMultiTexCoord2fARB = _opengl.glMultiTexCoord2fARB

def glMultiTexCoord2fvARB(target, v):
    return _opengl.glMultiTexCoord2fvARB(target, v)
glMultiTexCoord2fvARB = _opengl.glMultiTexCoord2fvARB

def glMultiTexCoord2iARB(target, s, t):
    return _opengl.glMultiTexCoord2iARB(target, s, t)
glMultiTexCoord2iARB = _opengl.glMultiTexCoord2iARB

def glMultiTexCoord2ivARB(target, v):
    return _opengl.glMultiTexCoord2ivARB(target, v)
glMultiTexCoord2ivARB = _opengl.glMultiTexCoord2ivARB

def glMultiTexCoord2sARB(target, s, t):
    return _opengl.glMultiTexCoord2sARB(target, s, t)
glMultiTexCoord2sARB = _opengl.glMultiTexCoord2sARB

def glMultiTexCoord2svARB(target, v):
    return _opengl.glMultiTexCoord2svARB(target, v)
glMultiTexCoord2svARB = _opengl.glMultiTexCoord2svARB

def glMultiTexCoord3dARB(target, s, t, r):
    return _opengl.glMultiTexCoord3dARB(target, s, t, r)
glMultiTexCoord3dARB = _opengl.glMultiTexCoord3dARB

def glMultiTexCoord3dvARB(target, v):
    return _opengl.glMultiTexCoord3dvARB(target, v)
glMultiTexCoord3dvARB = _opengl.glMultiTexCoord3dvARB

def glMultiTexCoord3fARB(target, s, t, r):
    return _opengl.glMultiTexCoord3fARB(target, s, t, r)
glMultiTexCoord3fARB = _opengl.glMultiTexCoord3fARB

def glMultiTexCoord3fvARB(target, v):
    return _opengl.glMultiTexCoord3fvARB(target, v)
glMultiTexCoord3fvARB = _opengl.glMultiTexCoord3fvARB

def glMultiTexCoord3iARB(target, s, t, r):
    return _opengl.glMultiTexCoord3iARB(target, s, t, r)
glMultiTexCoord3iARB = _opengl.glMultiTexCoord3iARB

def glMultiTexCoord3ivARB(target, v):
    return _opengl.glMultiTexCoord3ivARB(target, v)
glMultiTexCoord3ivARB = _opengl.glMultiTexCoord3ivARB

def glMultiTexCoord3sARB(target, s, t, r):
    return _opengl.glMultiTexCoord3sARB(target, s, t, r)
glMultiTexCoord3sARB = _opengl.glMultiTexCoord3sARB

def glMultiTexCoord3svARB(target, v):
    return _opengl.glMultiTexCoord3svARB(target, v)
glMultiTexCoord3svARB = _opengl.glMultiTexCoord3svARB

def glMultiTexCoord4dARB(target, s, t, r, q):
    return _opengl.glMultiTexCoord4dARB(target, s, t, r, q)
glMultiTexCoord4dARB = _opengl.glMultiTexCoord4dARB

def glMultiTexCoord4dvARB(target, v):
    return _opengl.glMultiTexCoord4dvARB(target, v)
glMultiTexCoord4dvARB = _opengl.glMultiTexCoord4dvARB

def glMultiTexCoord4fARB(target, s, t, r, q):
    return _opengl.glMultiTexCoord4fARB(target, s, t, r, q)
glMultiTexCoord4fARB = _opengl.glMultiTexCoord4fARB

def glMultiTexCoord4fvARB(target, v):
    return _opengl.glMultiTexCoord4fvARB(target, v)
glMultiTexCoord4fvARB = _opengl.glMultiTexCoord4fvARB

def glMultiTexCoord4iARB(target, s, t, r, q):
    return _opengl.glMultiTexCoord4iARB(target, s, t, r, q)
glMultiTexCoord4iARB = _opengl.glMultiTexCoord4iARB

def glMultiTexCoord4ivARB(target, v):
    return _opengl.glMultiTexCoord4ivARB(target, v)
glMultiTexCoord4ivARB = _opengl.glMultiTexCoord4ivARB

def glMultiTexCoord4sARB(target, s, t, r, q):
    return _opengl.glMultiTexCoord4sARB(target, s, t, r, q)
glMultiTexCoord4sARB = _opengl.glMultiTexCoord4sARB

def glMultiTexCoord4svARB(target, v):
    return _opengl.glMultiTexCoord4svARB(target, v)
glMultiTexCoord4svARB = _opengl.glMultiTexCoord4svARB
GL_MESA_packed_depth_stencil = _opengl.GL_MESA_packed_depth_stencil
GL_DEPTH_STENCIL_MESA = _opengl.GL_DEPTH_STENCIL_MESA
GL_UNSIGNED_INT_24_8_MESA = _opengl.GL_UNSIGNED_INT_24_8_MESA
GL_UNSIGNED_INT_8_24_REV_MESA = _opengl.GL_UNSIGNED_INT_8_24_REV_MESA
GL_UNSIGNED_SHORT_15_1_MESA = _opengl.GL_UNSIGNED_SHORT_15_1_MESA
GL_UNSIGNED_SHORT_1_15_REV_MESA = _opengl.GL_UNSIGNED_SHORT_1_15_REV_MESA
GL_ATI_blend_equation_separate = _opengl.GL_ATI_blend_equation_separate
GL_ALPHA_BLEND_EQUATION_ATI = _opengl.GL_ALPHA_BLEND_EQUATION_ATI

def glBlendEquationSeparateATI(modeRGB, modeA):
    return _opengl.glBlendEquationSeparateATI(modeRGB, modeA)
glBlendEquationSeparateATI = _opengl.glBlendEquationSeparateATI
GL_OES_EGL_image = _opengl.GL_OES_EGL_image
GLU_EXT_object_space_tess = _opengl.GLU_EXT_object_space_tess
GLU_EXT_nurbs_tessellator = _opengl.GLU_EXT_nurbs_tessellator
GLU_FALSE = _opengl.GLU_FALSE
GLU_TRUE = _opengl.GLU_TRUE
GLU_VERSION_1_1 = _opengl.GLU_VERSION_1_1
GLU_VERSION_1_2 = _opengl.GLU_VERSION_1_2
GLU_VERSION_1_3 = _opengl.GLU_VERSION_1_3
GLU_VERSION = _opengl.GLU_VERSION
GLU_EXTENSIONS = _opengl.GLU_EXTENSIONS
GLU_INVALID_ENUM = _opengl.GLU_INVALID_ENUM
GLU_INVALID_VALUE = _opengl.GLU_INVALID_VALUE
GLU_OUT_OF_MEMORY = _opengl.GLU_OUT_OF_MEMORY
GLU_INCOMPATIBLE_GL_VERSION = _opengl.GLU_INCOMPATIBLE_GL_VERSION
GLU_INVALID_OPERATION = _opengl.GLU_INVALID_OPERATION
GLU_OUTLINE_POLYGON = _opengl.GLU_OUTLINE_POLYGON
GLU_OUTLINE_PATCH = _opengl.GLU_OUTLINE_PATCH
GLU_NURBS_ERROR = _opengl.GLU_NURBS_ERROR
GLU_ERROR = _opengl.GLU_ERROR
GLU_NURBS_BEGIN = _opengl.GLU_NURBS_BEGIN
GLU_NURBS_BEGIN_EXT = _opengl.GLU_NURBS_BEGIN_EXT
GLU_NURBS_VERTEX = _opengl.GLU_NURBS_VERTEX
GLU_NURBS_VERTEX_EXT = _opengl.GLU_NURBS_VERTEX_EXT
GLU_NURBS_NORMAL = _opengl.GLU_NURBS_NORMAL
GLU_NURBS_NORMAL_EXT = _opengl.GLU_NURBS_NORMAL_EXT
GLU_NURBS_COLOR = _opengl.GLU_NURBS_COLOR
GLU_NURBS_COLOR_EXT = _opengl.GLU_NURBS_COLOR_EXT
GLU_NURBS_TEXTURE_COORD = _opengl.GLU_NURBS_TEXTURE_COORD
GLU_NURBS_TEX_COORD_EXT = _opengl.GLU_NURBS_TEX_COORD_EXT
GLU_NURBS_END = _opengl.GLU_NURBS_END
GLU_NURBS_END_EXT = _opengl.GLU_NURBS_END_EXT
GLU_NURBS_BEGIN_DATA = _opengl.GLU_NURBS_BEGIN_DATA
GLU_NURBS_BEGIN_DATA_EXT = _opengl.GLU_NURBS_BEGIN_DATA_EXT
GLU_NURBS_VERTEX_DATA = _opengl.GLU_NURBS_VERTEX_DATA
GLU_NURBS_VERTEX_DATA_EXT = _opengl.GLU_NURBS_VERTEX_DATA_EXT
GLU_NURBS_NORMAL_DATA = _opengl.GLU_NURBS_NORMAL_DATA
GLU_NURBS_NORMAL_DATA_EXT = _opengl.GLU_NURBS_NORMAL_DATA_EXT
GLU_NURBS_COLOR_DATA = _opengl.GLU_NURBS_COLOR_DATA
GLU_NURBS_COLOR_DATA_EXT = _opengl.GLU_NURBS_COLOR_DATA_EXT
GLU_NURBS_TEXTURE_COORD_DATA = _opengl.GLU_NURBS_TEXTURE_COORD_DATA
GLU_NURBS_TEX_COORD_DATA_EXT = _opengl.GLU_NURBS_TEX_COORD_DATA_EXT
GLU_NURBS_END_DATA = _opengl.GLU_NURBS_END_DATA
GLU_NURBS_END_DATA_EXT = _opengl.GLU_NURBS_END_DATA_EXT
GLU_NURBS_ERROR1 = _opengl.GLU_NURBS_ERROR1
GLU_NURBS_ERROR2 = _opengl.GLU_NURBS_ERROR2
GLU_NURBS_ERROR3 = _opengl.GLU_NURBS_ERROR3
GLU_NURBS_ERROR4 = _opengl.GLU_NURBS_ERROR4
GLU_NURBS_ERROR5 = _opengl.GLU_NURBS_ERROR5
GLU_NURBS_ERROR6 = _opengl.GLU_NURBS_ERROR6
GLU_NURBS_ERROR7 = _opengl.GLU_NURBS_ERROR7
GLU_NURBS_ERROR8 = _opengl.GLU_NURBS_ERROR8
GLU_NURBS_ERROR9 = _opengl.GLU_NURBS_ERROR9
GLU_NURBS_ERROR10 = _opengl.GLU_NURBS_ERROR10
GLU_NURBS_ERROR11 = _opengl.GLU_NURBS_ERROR11
GLU_NURBS_ERROR12 = _opengl.GLU_NURBS_ERROR12
GLU_NURBS_ERROR13 = _opengl.GLU_NURBS_ERROR13
GLU_NURBS_ERROR14 = _opengl.GLU_NURBS_ERROR14
GLU_NURBS_ERROR15 = _opengl.GLU_NURBS_ERROR15
GLU_NURBS_ERROR16 = _opengl.GLU_NURBS_ERROR16
GLU_NURBS_ERROR17 = _opengl.GLU_NURBS_ERROR17
GLU_NURBS_ERROR18 = _opengl.GLU_NURBS_ERROR18
GLU_NURBS_ERROR19 = _opengl.GLU_NURBS_ERROR19
GLU_NURBS_ERROR20 = _opengl.GLU_NURBS_ERROR20
GLU_NURBS_ERROR21 = _opengl.GLU_NURBS_ERROR21
GLU_NURBS_ERROR22 = _opengl.GLU_NURBS_ERROR22
GLU_NURBS_ERROR23 = _opengl.GLU_NURBS_ERROR23
GLU_NURBS_ERROR24 = _opengl.GLU_NURBS_ERROR24
GLU_NURBS_ERROR25 = _opengl.GLU_NURBS_ERROR25
GLU_NURBS_ERROR26 = _opengl.GLU_NURBS_ERROR26
GLU_NURBS_ERROR27 = _opengl.GLU_NURBS_ERROR27
GLU_NURBS_ERROR28 = _opengl.GLU_NURBS_ERROR28
GLU_NURBS_ERROR29 = _opengl.GLU_NURBS_ERROR29
GLU_NURBS_ERROR30 = _opengl.GLU_NURBS_ERROR30
GLU_NURBS_ERROR31 = _opengl.GLU_NURBS_ERROR31
GLU_NURBS_ERROR32 = _opengl.GLU_NURBS_ERROR32
GLU_NURBS_ERROR33 = _opengl.GLU_NURBS_ERROR33
GLU_NURBS_ERROR34 = _opengl.GLU_NURBS_ERROR34
GLU_NURBS_ERROR35 = _opengl.GLU_NURBS_ERROR35
GLU_NURBS_ERROR36 = _opengl.GLU_NURBS_ERROR36
GLU_NURBS_ERROR37 = _opengl.GLU_NURBS_ERROR37
GLU_AUTO_LOAD_MATRIX = _opengl.GLU_AUTO_LOAD_MATRIX
GLU_CULLING = _opengl.GLU_CULLING
GLU_SAMPLING_TOLERANCE = _opengl.GLU_SAMPLING_TOLERANCE
GLU_DISPLAY_MODE = _opengl.GLU_DISPLAY_MODE
GLU_PARAMETRIC_TOLERANCE = _opengl.GLU_PARAMETRIC_TOLERANCE
GLU_SAMPLING_METHOD = _opengl.GLU_SAMPLING_METHOD
GLU_U_STEP = _opengl.GLU_U_STEP
GLU_V_STEP = _opengl.GLU_V_STEP
GLU_NURBS_MODE = _opengl.GLU_NURBS_MODE
GLU_NURBS_MODE_EXT = _opengl.GLU_NURBS_MODE_EXT
GLU_NURBS_TESSELLATOR = _opengl.GLU_NURBS_TESSELLATOR
GLU_NURBS_TESSELLATOR_EXT = _opengl.GLU_NURBS_TESSELLATOR_EXT
GLU_NURBS_RENDERER = _opengl.GLU_NURBS_RENDERER
GLU_NURBS_RENDERER_EXT = _opengl.GLU_NURBS_RENDERER_EXT
GLU_OBJECT_PARAMETRIC_ERROR = _opengl.GLU_OBJECT_PARAMETRIC_ERROR
GLU_OBJECT_PARAMETRIC_ERROR_EXT = _opengl.GLU_OBJECT_PARAMETRIC_ERROR_EXT
GLU_OBJECT_PATH_LENGTH = _opengl.GLU_OBJECT_PATH_LENGTH
GLU_OBJECT_PATH_LENGTH_EXT = _opengl.GLU_OBJECT_PATH_LENGTH_EXT
GLU_PATH_LENGTH = _opengl.GLU_PATH_LENGTH
GLU_PARAMETRIC_ERROR = _opengl.GLU_PARAMETRIC_ERROR
GLU_DOMAIN_DISTANCE = _opengl.GLU_DOMAIN_DISTANCE
GLU_MAP1_TRIM_2 = _opengl.GLU_MAP1_TRIM_2
GLU_MAP1_TRIM_3 = _opengl.GLU_MAP1_TRIM_3
GLU_POINT = _opengl.GLU_POINT
GLU_LINE = _opengl.GLU_LINE
GLU_FILL = _opengl.GLU_FILL
GLU_SILHOUETTE = _opengl.GLU_SILHOUETTE
GLU_SMOOTH = _opengl.GLU_SMOOTH
GLU_FLAT = _opengl.GLU_FLAT
GLU_NONE = _opengl.GLU_NONE
GLU_OUTSIDE = _opengl.GLU_OUTSIDE
GLU_INSIDE = _opengl.GLU_INSIDE
GLU_TESS_BEGIN = _opengl.GLU_TESS_BEGIN
GLU_BEGIN = _opengl.GLU_BEGIN
GLU_TESS_VERTEX = _opengl.GLU_TESS_VERTEX
GLU_VERTEX = _opengl.GLU_VERTEX
GLU_TESS_END = _opengl.GLU_TESS_END
GLU_END = _opengl.GLU_END
GLU_TESS_ERROR = _opengl.GLU_TESS_ERROR
GLU_TESS_EDGE_FLAG = _opengl.GLU_TESS_EDGE_FLAG
GLU_EDGE_FLAG = _opengl.GLU_EDGE_FLAG
GLU_TESS_COMBINE = _opengl.GLU_TESS_COMBINE
GLU_TESS_BEGIN_DATA = _opengl.GLU_TESS_BEGIN_DATA
GLU_TESS_VERTEX_DATA = _opengl.GLU_TESS_VERTEX_DATA
GLU_TESS_END_DATA = _opengl.GLU_TESS_END_DATA
GLU_TESS_ERROR_DATA = _opengl.GLU_TESS_ERROR_DATA
GLU_TESS_EDGE_FLAG_DATA = _opengl.GLU_TESS_EDGE_FLAG_DATA
GLU_TESS_COMBINE_DATA = _opengl.GLU_TESS_COMBINE_DATA
GLU_CW = _opengl.GLU_CW
GLU_CCW = _opengl.GLU_CCW
GLU_INTERIOR = _opengl.GLU_INTERIOR
GLU_EXTERIOR = _opengl.GLU_EXTERIOR
GLU_UNKNOWN = _opengl.GLU_UNKNOWN
GLU_TESS_WINDING_RULE = _opengl.GLU_TESS_WINDING_RULE
GLU_TESS_BOUNDARY_ONLY = _opengl.GLU_TESS_BOUNDARY_ONLY
GLU_TESS_TOLERANCE = _opengl.GLU_TESS_TOLERANCE
GLU_TESS_ERROR1 = _opengl.GLU_TESS_ERROR1
GLU_TESS_ERROR2 = _opengl.GLU_TESS_ERROR2
GLU_TESS_ERROR3 = _opengl.GLU_TESS_ERROR3
GLU_TESS_ERROR4 = _opengl.GLU_TESS_ERROR4
GLU_TESS_ERROR5 = _opengl.GLU_TESS_ERROR5
GLU_TESS_ERROR6 = _opengl.GLU_TESS_ERROR6
GLU_TESS_ERROR7 = _opengl.GLU_TESS_ERROR7
GLU_TESS_ERROR8 = _opengl.GLU_TESS_ERROR8
GLU_TESS_MISSING_BEGIN_POLYGON = _opengl.GLU_TESS_MISSING_BEGIN_POLYGON
GLU_TESS_MISSING_BEGIN_CONTOUR = _opengl.GLU_TESS_MISSING_BEGIN_CONTOUR
GLU_TESS_MISSING_END_POLYGON = _opengl.GLU_TESS_MISSING_END_POLYGON
GLU_TESS_MISSING_END_CONTOUR = _opengl.GLU_TESS_MISSING_END_CONTOUR
GLU_TESS_COORD_TOO_LARGE = _opengl.GLU_TESS_COORD_TOO_LARGE
GLU_TESS_NEED_COMBINE_CALLBACK = _opengl.GLU_TESS_NEED_COMBINE_CALLBACK
GLU_TESS_WINDING_ODD = _opengl.GLU_TESS_WINDING_ODD
GLU_TESS_WINDING_NONZERO = _opengl.GLU_TESS_WINDING_NONZERO
GLU_TESS_WINDING_POSITIVE = _opengl.GLU_TESS_WINDING_POSITIVE
GLU_TESS_WINDING_NEGATIVE = _opengl.GLU_TESS_WINDING_NEGATIVE
GLU_TESS_WINDING_ABS_GEQ_TWO = _opengl.GLU_TESS_WINDING_ABS_GEQ_TWO
GLU_TESS_MAX_COORD = _opengl.GLU_TESS_MAX_COORD

def gluBeginCurve(nurb):
    return _opengl.gluBeginCurve(nurb)
gluBeginCurve = _opengl.gluBeginCurve

def gluBeginPolygon(tess):
    return _opengl.gluBeginPolygon(tess)
gluBeginPolygon = _opengl.gluBeginPolygon

def gluBeginSurface(nurb):
    return _opengl.gluBeginSurface(nurb)
gluBeginSurface = _opengl.gluBeginSurface

def gluBeginTrim(nurb):
    return _opengl.gluBeginTrim(nurb)
gluBeginTrim = _opengl.gluBeginTrim

def gluBuild1DMipmapLevels(target, internalFormat, width, format, type, level, base, max, data):
    return _opengl.gluBuild1DMipmapLevels(target, internalFormat, width, format, type, level, base, max, data)
gluBuild1DMipmapLevels = _opengl.gluBuild1DMipmapLevels

def gluBuild1DMipmaps(target, internalFormat, width, format, type, data):
    return _opengl.gluBuild1DMipmaps(target, internalFormat, width, format, type, data)
gluBuild1DMipmaps = _opengl.gluBuild1DMipmaps

def gluBuild2DMipmapLevels(target, internalFormat, width, height, format, type, level, base, max, data):
    return _opengl.gluBuild2DMipmapLevels(target, internalFormat, width, height, format, type, level, base, max, data)
gluBuild2DMipmapLevels = _opengl.gluBuild2DMipmapLevels

def gluBuild2DMipmaps(target, internalFormat, width, height, format, type, data):
    return _opengl.gluBuild2DMipmaps(target, internalFormat, width, height, format, type, data)
gluBuild2DMipmaps = _opengl.gluBuild2DMipmaps

def gluBuild3DMipmapLevels(target, internalFormat, width, height, depth, format, type, level, base, max, data):
    return _opengl.gluBuild3DMipmapLevels(target, internalFormat, width, height, depth, format, type, level, base, max, data)
gluBuild3DMipmapLevels = _opengl.gluBuild3DMipmapLevels

def gluBuild3DMipmaps(target, internalFormat, width, height, depth, format, type, data):
    return _opengl.gluBuild3DMipmaps(target, internalFormat, width, height, depth, format, type, data)
gluBuild3DMipmaps = _opengl.gluBuild3DMipmaps

def gluCheckExtension(extName, extString):
    return _opengl.gluCheckExtension(extName, extString)
gluCheckExtension = _opengl.gluCheckExtension

def gluCylinder(quad, base, top, height, slices, stacks):
    return _opengl.gluCylinder(quad, base, top, height, slices, stacks)
gluCylinder = _opengl.gluCylinder

def gluDeleteNurbsRenderer(nurb):
    return _opengl.gluDeleteNurbsRenderer(nurb)
gluDeleteNurbsRenderer = _opengl.gluDeleteNurbsRenderer

def gluDeleteQuadric(quad):
    return _opengl.gluDeleteQuadric(quad)
gluDeleteQuadric = _opengl.gluDeleteQuadric

def gluDeleteTess(tess):
    return _opengl.gluDeleteTess(tess)
gluDeleteTess = _opengl.gluDeleteTess

def gluDisk(quad, inner, outer, slices, loops):
    return _opengl.gluDisk(quad, inner, outer, slices, loops)
gluDisk = _opengl.gluDisk

def gluEndCurve(nurb):
    return _opengl.gluEndCurve(nurb)
gluEndCurve = _opengl.gluEndCurve

def gluEndPolygon(tess):
    return _opengl.gluEndPolygon(tess)
gluEndPolygon = _opengl.gluEndPolygon

def gluEndSurface(nurb):
    return _opengl.gluEndSurface(nurb)
gluEndSurface = _opengl.gluEndSurface

def gluEndTrim(nurb):
    return _opengl.gluEndTrim(nurb)
gluEndTrim = _opengl.gluEndTrim

def gluErrorString(error):
    return _opengl.gluErrorString(error)
gluErrorString = _opengl.gluErrorString

def gluGetNurbsProperty(nurb, property, data):
    return _opengl.gluGetNurbsProperty(nurb, property, data)
gluGetNurbsProperty = _opengl.gluGetNurbsProperty

def gluGetString(name):
    return _opengl.gluGetString(name)
gluGetString = _opengl.gluGetString

def gluGetTessProperty(tess, which, data):
    return _opengl.gluGetTessProperty(tess, which, data)
gluGetTessProperty = _opengl.gluGetTessProperty

def gluLoadSamplingMatrices(nurb, model, perspective, view):
    return _opengl.gluLoadSamplingMatrices(nurb, model, perspective, view)
gluLoadSamplingMatrices = _opengl.gluLoadSamplingMatrices

def gluLookAt(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ):
    return _opengl.gluLookAt(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ)
gluLookAt = _opengl.gluLookAt

def gluNewNurbsRenderer():
    return _opengl.gluNewNurbsRenderer()
gluNewNurbsRenderer = _opengl.gluNewNurbsRenderer

def gluNewQuadric():
    return _opengl.gluNewQuadric()
gluNewQuadric = _opengl.gluNewQuadric

def gluNewTess():
    return _opengl.gluNewTess()
gluNewTess = _opengl.gluNewTess

def gluNextContour(tess, type):
    return _opengl.gluNextContour(tess, type)
gluNextContour = _opengl.gluNextContour

def gluNurbsCallback(nurb, which, CallBackFunc):
    return _opengl.gluNurbsCallback(nurb, which, CallBackFunc)
gluNurbsCallback = _opengl.gluNurbsCallback

def gluNurbsCallbackData(nurb, userData):
    return _opengl.gluNurbsCallbackData(nurb, userData)
gluNurbsCallbackData = _opengl.gluNurbsCallbackData

def gluNurbsCallbackDataEXT(nurb, userData):
    return _opengl.gluNurbsCallbackDataEXT(nurb, userData)
gluNurbsCallbackDataEXT = _opengl.gluNurbsCallbackDataEXT

def gluNurbsCurve(nurb, knotCount, knots, stride, control, order, type):
    return _opengl.gluNurbsCurve(nurb, knotCount, knots, stride, control, order, type)
gluNurbsCurve = _opengl.gluNurbsCurve

def gluNurbsProperty(nurb, property, value):
    return _opengl.gluNurbsProperty(nurb, property, value)
gluNurbsProperty = _opengl.gluNurbsProperty

def gluNurbsSurface(nurb, sKnotCount, sKnots, tKnotCount, tKnots, sStride, tStride, control, sOrder, tOrder, type):
    return _opengl.gluNurbsSurface(nurb, sKnotCount, sKnots, tKnotCount, tKnots, sStride, tStride, control, sOrder, tOrder, type)
gluNurbsSurface = _opengl.gluNurbsSurface

def gluOrtho2D(left, right, bottom, top):
    return _opengl.gluOrtho2D(left, right, bottom, top)
gluOrtho2D = _opengl.gluOrtho2D

def gluPartialDisk(quad, inner, outer, slices, loops, start, sweep):
    return _opengl.gluPartialDisk(quad, inner, outer, slices, loops, start, sweep)
gluPartialDisk = _opengl.gluPartialDisk

def gluPerspective(fovy, aspect, zNear, zFar):
    return _opengl.gluPerspective(fovy, aspect, zNear, zFar)
gluPerspective = _opengl.gluPerspective

def gluPickMatrix(x, y, delX, delY, viewport):
    return _opengl.gluPickMatrix(x, y, delX, delY, viewport)
gluPickMatrix = _opengl.gluPickMatrix

def gluProject(objX, objY, objZ, model, proj, view, winX, winY, winZ):
    return _opengl.gluProject(objX, objY, objZ, model, proj, view, winX, winY, winZ)
gluProject = _opengl.gluProject

def gluPwlCurve(nurb, count, data, stride, type):
    return _opengl.gluPwlCurve(nurb, count, data, stride, type)
gluPwlCurve = _opengl.gluPwlCurve

def gluQuadricCallback(quad, which, CallBackFunc):
    return _opengl.gluQuadricCallback(quad, which, CallBackFunc)
gluQuadricCallback = _opengl.gluQuadricCallback

def gluQuadricDrawStyle(quad, draw):
    return _opengl.gluQuadricDrawStyle(quad, draw)
gluQuadricDrawStyle = _opengl.gluQuadricDrawStyle

def gluQuadricNormals(quad, normal):
    return _opengl.gluQuadricNormals(quad, normal)
gluQuadricNormals = _opengl.gluQuadricNormals

def gluQuadricOrientation(quad, orientation):
    return _opengl.gluQuadricOrientation(quad, orientation)
gluQuadricOrientation = _opengl.gluQuadricOrientation

def gluQuadricTexture(quad, texture):
    return _opengl.gluQuadricTexture(quad, texture)
gluQuadricTexture = _opengl.gluQuadricTexture

def gluScaleImage(format, wIn, hIn, typeIn, dataIn, wOut, hOut, typeOut, dataOut):
    return _opengl.gluScaleImage(format, wIn, hIn, typeIn, dataIn, wOut, hOut, typeOut, dataOut)
gluScaleImage = _opengl.gluScaleImage

def gluSphere(quad, radius, slices, stacks):
    return _opengl.gluSphere(quad, radius, slices, stacks)
gluSphere = _opengl.gluSphere

def gluTessBeginContour(tess):
    return _opengl.gluTessBeginContour(tess)
gluTessBeginContour = _opengl.gluTessBeginContour

def gluTessBeginPolygon(tess, data):
    return _opengl.gluTessBeginPolygon(tess, data)
gluTessBeginPolygon = _opengl.gluTessBeginPolygon

def gluTessCallback(tess, which, CallBackFunc):
    return _opengl.gluTessCallback(tess, which, CallBackFunc)
gluTessCallback = _opengl.gluTessCallback

def gluTessEndContour(tess):
    return _opengl.gluTessEndContour(tess)
gluTessEndContour = _opengl.gluTessEndContour

def gluTessEndPolygon(tess):
    return _opengl.gluTessEndPolygon(tess)
gluTessEndPolygon = _opengl.gluTessEndPolygon

def gluTessNormal(tess, valueX, valueY, valueZ):
    return _opengl.gluTessNormal(tess, valueX, valueY, valueZ)
gluTessNormal = _opengl.gluTessNormal

def gluTessProperty(tess, which, data):
    return _opengl.gluTessProperty(tess, which, data)
gluTessProperty = _opengl.gluTessProperty

def gluTessVertex(tess, location, data):
    return _opengl.gluTessVertex(tess, location, data)
gluTessVertex = _opengl.gluTessVertex

def gluUnProject(winX, winY, winZ, model, proj, view, objX, objY, objZ):
    return _opengl.gluUnProject(winX, winY, winZ, model, proj, view, objX, objY, objZ)
gluUnProject = _opengl.gluUnProject

def gluUnProject4(winX, winY, winZ, clipW, model, proj, view, nearVal, farVal, objX, objY, objZ, objW):
    return _opengl.gluUnProject4(winX, winY, winZ, clipW, model, proj, view, nearVal, farVal, objX, objY, objZ, objW)
gluUnProject4 = _opengl.gluUnProject4
# This file is compatible with both classic and new-style classes.


